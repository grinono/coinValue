{"version":3,"file":"0.0c564168e9de11d84d05.hot-update.js","sources":["/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/app/Routes.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/Button.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/LayoutCenter.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Alert.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Button.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Card.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/CardGroup.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/CardText.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/CardTitle.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Col.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Container.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Form.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/FormItem.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Input.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Label.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/ListGroup.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/ListItem.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/MenuItem.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/NavBar.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Option.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/PageLayout.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/RenderCheckBox.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/RenderField.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/RenderSelect.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Row.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Select.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/common/components/web/ui-bootstrap/components/Table.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/connector.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/contact/components/ContactForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/contact/components/ContactView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/contact/containers/Contact.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/contact/index.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/counter/components/CounterView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/counter/containers/Counter.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/counter/index.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/home/containers/home.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/home/index.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/index.js","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/pageNotFound/containers/PageNotFound.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/pageNotFound/index.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/components/PostCommentForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/components/PostCommentsView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/components/PostEditView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/components/PostForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/components/PostList.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/containers/Post.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/containers/PostComments.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/containers/PostEdit.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/post/index.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/components/CancelSubscriptionView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/components/CardInfoView.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/components/SubscribersOnlyView.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/components/SubscriptionCardForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/components/SubscriptionView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/components/UpdateCardView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/containers/Auth.js","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/containers/CancelSubscription.js","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/containers/CardInfo.js","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/containers/SubscribersOnly.js","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/containers/Subscription.js","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/containers/SubscriptionProfile.js","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/containers/UpdateCard.js","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/subscription/index.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/upload/components/UploadView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/upload/containers/Upload.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/upload/index.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/ForgotPasswordForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/ForgotPasswordView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/LoginForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/LoginView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/ProfileView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/RegisterForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/RegisterView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/ResetPasswordForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/ResetPasswordView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/UserEditView.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/UserForm.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/Users.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/UsersFilterView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/components/UsersListView.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/Auth.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/ForgotPassword.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/Login.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/Profile.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/Register.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/ResetPassword.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/UserEdit.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/UsersFilter.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/containers/UsersList.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/client/modules/user/index.web.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/server/middleware/html.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/src/server/middleware/website.jsx","/Users/bartelverkruijssen/Google Drive/Talqs/Talqs General/development/investCoin/apollo-universal-starter-kit-master/external \"react\""],"sourcesContent":["import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport modules from '../modules';\n\nexport default <Switch>{modules.routes}</Switch>;\n\n\n\n// WEBPACK FOOTER //\n// src/client/app/Routes.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\n\nconst Button = ({ children, onPress, disabled }) => {\n  const { buttonStyle, textStyle } = styles;\n\n  return (\n    <TouchableOpacity onPress={onPress} style={buttonStyle} activeOpacity={disabled ? 0.5 : 1}>\n      <Text style={textStyle}>{children}</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonStyle: {\n    backgroundColor: '#0275d8',\n    borderRadius: 5,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  textStyle: {\n    alignSelf: 'center',\n    color: '#FFF',\n    fontSize: 16,\n    fontWeight: '600',\n    paddingTop: 10,\n    paddingBottom: 10\n  }\n});\n\nButton.propTypes = {\n  children: PropTypes.node,\n  onPress: PropTypes.func,\n  disabled: PropTypes.bool\n};\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/Button.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet } from 'react-native';\n\nconst LayoutCenter = ({ children }) => {\n  const { container, layout, offset, content, column } = styles;\n\n  return (\n    <View style={container}>\n      <View style={layout}>\n        <View style={offset} />\n        <View style={content}>\n          <View style={column}>{children}</View>\n        </View>\n        <View style={offset} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  layout: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  column: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch'\n  },\n  content: {\n    flexGrow: 3\n  },\n  offset: {\n    flexGrow: 3\n  }\n});\n\nLayoutCenter.propTypes = {\n  children: PropTypes.node\n};\n\nexport default LayoutCenter;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/LayoutCenter.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert as RSAlert } from 'reactstrap';\n\nconst Alert = ({ children, color, ...props }) => {\n  if (color === 'error') {\n    color = 'danger';\n  }\n  return (\n    <RSAlert {...props} color={color}>\n      {children}\n    </RSAlert>\n  );\n};\n\nAlert.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.string\n};\n\nexport default Alert;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Alert.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button as RSButton } from 'reactstrap';\n\nconst Button = ({ children, ...props }) => {\n  return <RSButton {...props}>{children}</RSButton>;\n};\n\nButton.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Button;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Button.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card as RSCard } from 'reactstrap';\n\nconst Card = ({ children, ...props }) => {\n  return <RSCard {...props}>{children}</RSCard>;\n};\n\nCard.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Card;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Card.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardBody } from 'reactstrap';\n\nconst CardGroup = ({ children, ...props }) => {\n  return <CardBody {...props}>{children}</CardBody>;\n};\n\nCardGroup.propTypes = {\n  children: PropTypes.node\n};\n\nexport default CardGroup;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/CardGroup.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardText as RSCardText } from 'reactstrap';\n\nconst CardText = ({ children, ...props }) => {\n  return <RSCardText {...props}>{children}</RSCardText>;\n};\n\nCardText.propTypes = {\n  children: PropTypes.node\n};\n\nexport default CardText;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/CardText.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardTitle as RSCardTitle } from 'reactstrap';\n\nconst CardTitle = ({ children, ...props }) => {\n  return <RSCardTitle {...props}>{children}</RSCardTitle>;\n};\n\nCardTitle.propTypes = {\n  children: PropTypes.node\n};\n\nexport default CardTitle;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/CardTitle.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col as RSCol } from 'reactstrap';\n\nconst Col = ({ children, ...props }) => {\n  return <RSCol {...props}>{children}</RSCol>;\n};\n\nCol.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Col;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Col.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container as RSContainer } from 'reactstrap';\n\nconst Container = ({ children, ...props }) => {\n  return <RSContainer {...props}>{children}</RSContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Container;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Container.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form as RSForm } from 'reactstrap';\n\nconst Form = ({ children, layout, ...props }) => {\n  let inline = false;\n  if (layout === 'inline') {\n    inline = true;\n  }\n  return (\n    <RSForm {...props} inline={inline}>\n      {children}\n    </RSForm>\n  );\n};\n\nForm.propTypes = {\n  children: PropTypes.node,\n  layout: PropTypes.string,\n  type: PropTypes.string\n};\n\nexport default Form;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Form.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, Label } from 'reactstrap';\n\nconst FormItem = ({ children, label, ...props }) => {\n  return (\n    <FormGroup {...props}>\n      {label && <Label size=\"md\">{label}:&nbsp;</Label>}\n      {children}\n    </FormGroup>\n  );\n};\n\nFormItem.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string\n};\n\nexport default FormItem;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/FormItem.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input as RSInput } from 'reactstrap';\n\nconst Input = ({ children, ...props }) => {\n  return <RSInput {...props}>{children}</RSInput>;\n};\n\nInput.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Input;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Input.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label as RSLabel } from 'reactstrap';\n\nconst Label = ({ children, ...props }) => {\n  return <RSLabel {...props}>{children}</RSLabel>;\n};\n\nLabel.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Label;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Label.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup as RSListGroup } from 'reactstrap';\n\nconst ListGroup = ({ children, ...props }) => {\n  return <RSListGroup {...props}>{children}</RSListGroup>;\n};\n\nListGroup.propTypes = {\n  children: PropTypes.node\n};\n\nexport default ListGroup;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/ListGroup.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroupItem } from 'reactstrap';\n\nconst ListItem = ({ children, ...props }) => {\n  return <ListGroupItem {...props}>{children}</ListGroupItem>;\n};\n\nListItem.propTypes = {\n  children: PropTypes.node\n};\n\nexport default ListItem;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/ListItem.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavItem } from 'reactstrap';\n\nconst MenuItem = ({ children, ...props }) => {\n  return <NavItem {...props}>{children}</NavItem>;\n};\n\nMenuItem.propTypes = {\n  children: PropTypes.node\n};\n\nexport default MenuItem;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/MenuItem.jsx","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Container, Navbar, Nav, NavItem } from 'reactstrap';\n\nimport modules from '../../../../../../modules';\nimport settings from '../../../../../../../../settings';\n\nconst NavBar = () => (\n  <Navbar color=\"faded\" light>\n    <Container>\n      <Nav>\n        <NavLink to=\"/\" className=\"navbar-brand\">\n          {settings.app.name}\n        </NavLink>\n        {modules.navItems}\n      </Nav>\n\n      <Nav className=\"ustify-content-end\">\n        {modules.navItemsRight}\n        {(!__PERSIST_GQL__ || __DEV__) && (\n          <NavItem>\n            <a href=\"/graphiql\" className=\"nav-link\">\n              GraphiQL\n            </a>\n          </NavItem>\n        )}\n      </Nav>\n    </Container>\n  </Navbar>\n);\n\nexport default NavBar;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/NavBar.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Option = ({ children, ...props }) => {\n  return <option {...props}>{children}</option>;\n};\n\nOption.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Option;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Option.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Container } from 'reactstrap';\n\nimport NavBar from './NavBar';\nimport settings from '../../../../../../../../settings';\n\nconst footerHeight = '40px';\n\nconst Footer = styled.footer`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  line-height: ${footerHeight};\n  height: ${footerHeight};\n`;\n\nconst PageLayout = ({ children, navBar }) => {\n  return (\n    <section>\n      {navBar !== false && <NavBar />}\n      <Container id=\"content\">{children}</Container>\n      <Footer>\n        <div className=\"text-center\">&copy; 2017. {settings.app.name}.</div>\n      </Footer>\n    </section>\n  );\n};\n\nPageLayout.propTypes = {\n  children: PropTypes.node,\n  navBar: PropTypes.bool\n};\n\nexport default PageLayout;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/PageLayout.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap';\n\nconst RenderCheckBox = ({ input, label, type, meta: { touched, error } }) => {\n  let color = 'normal';\n  if (touched && error) {\n    color = 'danger';\n  }\n\n  return (\n    <FormGroup color={color} check>\n      <Label check>\n        <Input {...input} placeholder={label} type={type} /> {label}\n        {touched && (error && <FormFeedback>{error}</FormFeedback>)}\n      </Label>\n    </FormGroup>\n  );\n};\n\nRenderCheckBox.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.object\n};\n\nexport default RenderCheckBox;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/RenderCheckBox.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap';\n\nconst RenderField = ({ input, label, type, meta: { touched, error }, children }) => {\n  let valid = null;\n  if (touched && error) {\n    valid = false;\n  }\n\n  return (\n    <FormGroup>\n      {label && <Label>{label}</Label>}\n      <div>\n        <Input {...input} placeholder={label} type={type} valid={valid}>\n          {children}\n        </Input>\n        {touched && (error && <FormFeedback>{error}</FormFeedback>)}\n      </div>\n    </FormGroup>\n  );\n};\n\nRenderField.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.object,\n  children: PropTypes.array\n};\n\nexport default RenderField;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/RenderField.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap';\n\nconst RenderField = ({ input, label, type, children, meta: { touched, error } }) => {\n  let color = 'normal';\n  if (touched && error) {\n    color = 'danger';\n  }\n\n  return (\n    <FormGroup color={color}>\n      {label && <Label>{label}</Label>}\n      <div>\n        <Input {...input} type={type}>\n          {children}\n        </Input>\n        {touched && (error && <FormFeedback>{error}</FormFeedback>)}\n      </div>\n    </FormGroup>\n  );\n};\n\nRenderField.propTypes = {\n  input: PropTypes.object,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  meta: PropTypes.object,\n  children: PropTypes.node\n};\n\nexport default RenderField;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/RenderSelect.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row as RSRow } from 'reactstrap';\n\nconst Row = ({ children, ...props }) => {\n  return <RSRow {...props}>{children}</RSRow>;\n};\n\nRow.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Row;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Row.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'reactstrap';\n\nconst Select = ({ children, ...props }) => {\n  return (\n    <Input {...props} type=\"select\">\n      {children}\n    </Input>\n  );\n};\n\nSelect.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Select;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Select.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table as RSTable } from 'reactstrap';\n\nconst renderHead = columns => {\n  return columns.map(({ title, dataIndex, renderHeader, key }) => {\n    return (\n      <th key={key} className={`w-${columns.length === 2 ? 100 : 100 / columns.length}`}>\n        {renderHeader ? renderHeader(title, dataIndex) : title}\n      </th>\n    );\n  });\n};\n\nconst renderBody = (columns, dataSource) => {\n  return dataSource.map(entry => {\n    return <tr key={entry.id}>{renderData(columns, entry)}</tr>;\n  });\n};\n\nconst renderData = (columns, entry) => {\n  return columns.map(({ dataIndex, render, key }) => {\n    return <td key={key}>{render ? render(entry[dataIndex], entry) : entry[dataIndex]}</td>;\n  });\n};\n\nconst Table = ({ dataSource, columns, ...props }) => {\n  return (\n    <RSTable {...props}>\n      <thead>\n        <tr>{renderHead(columns)}</tr>\n      </thead>\n      <tbody>{renderBody(columns, dataSource)}</tbody>\n    </RSTable>\n  );\n};\n\nTable.propTypes = {\n  dataSource: PropTypes.array,\n  columns: PropTypes.array\n};\n\nexport default Table;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/common/components/web/ui-bootstrap/components/Table.jsx","import React from 'react';\n\nimport { merge, map, union, without, castArray } from 'lodash';\n\nimport log from '../../common/log';\n\nconst combine = (features, extractor) => without(union(...map(features, res => castArray(extractor(res)))), undefined);\n\nexport const featureCatalog = {};\n\nexport default class {\n  /* eslint-disable no-unused-vars */\n  constructor(\n    {\n      route,\n      navItem,\n      navItemRight,\n      reducer,\n      middleware,\n      afterware,\n      connectionParam,\n      createFetchOptions,\n      stylesInsert,\n      scriptsInsert,\n      rootComponentFactory,\n      catalogInfo\n    },\n    ...features\n  ) {\n    /* eslint-enable no-unused-vars */\n    combine(arguments, arg => arg.catalogInfo).forEach(info =>\n      Object.keys(info).forEach(key => (featureCatalog[key] = info[key]))\n    );\n    this.route = combine(arguments, arg => arg.route);\n    this.navItem = combine(arguments, arg => arg.navItem);\n    this.navItemRight = combine(arguments, arg => arg.navItemRight);\n    this.reducer = combine(arguments, arg => arg.reducer);\n    this.middleware = combine(arguments, arg => arg.middleware);\n    this.afterware = combine(arguments, arg => arg.afterware);\n    this.connectionParam = combine(arguments, arg => arg.connectionParam);\n    this.createFetchOptions = combine(arguments, arg => arg.createFetchOptions);\n    this.stylesInsert = combine(arguments, arg => arg.stylesInsert);\n    this.scriptsInsert = combine(arguments, arg => arg.scriptsInsert);\n    this.rootComponentFactory = combine(arguments, arg => arg.rootComponentFactory);\n  }\n\n  get routes() {\n    return this.route.map((component, idx) => React.cloneElement(component, { key: idx + this.route.length }));\n  }\n\n  get navItems() {\n    return this.navItem.map((component, idx) =>\n      React.cloneElement(component, {\n        key: component.key ? component.key : idx + this.navItem.length\n      })\n    );\n  }\n\n  get navItemsRight() {\n    return this.navItemRight.map((component, idx) =>\n      React.cloneElement(component, {\n        key: component.key ? component.key : idx + this.navItem.length\n      })\n    );\n  }\n\n  get reducers() {\n    return merge(...this.reducer);\n  }\n\n  get middlewares() {\n    return this.middleware;\n  }\n\n  get afterwares() {\n    return this.afterware;\n  }\n\n  get connectionParams() {\n    return this.connectionParam;\n  }\n\n  get constructFetchOptions() {\n    return this.createFetchOptions.length\n      ? (...args) => {\n          try {\n            let result = {};\n            for (let func of this.createFetchOptions) {\n              result = { ...result, ...func(...args) };\n            }\n            return result;\n          } catch (e) {\n            log.error(e.stack);\n          }\n        }\n      : null;\n  }\n\n  get stylesInserts() {\n    return this.stylesInsert;\n  }\n\n  get scriptsInserts() {\n    return this.scriptsInsert;\n  }\n\n  getWrappedRoot(root, req) {\n    let nestedRoot = root;\n    for (const componentFactory of this.rootComponentFactory) {\n      nestedRoot = React.cloneElement(componentFactory(req), {}, nestedRoot);\n    }\n    return nestedRoot;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/connector.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, RenderField, Button, Alert } from '../../common/components/web';\nimport { required, email, minLength } from '../../../../common/validation';\n\nconst ContactForm = ({ handleSubmit, submitting, onSubmit, error, sent }) => {\n  return (\n    <Form name=\"contact\" onSubmit={handleSubmit(onSubmit)}>\n      {sent && <Alert color=\"success\">Thank you for contacting us!</Alert>}\n      <Field name=\"name\" component={RenderField} type=\"text\" label=\"Name\" validate={[required, minLength(3)]} />\n      <Field name=\"email\" component={RenderField} type=\"text\" label=\"Email\" validate={[required, email]} />\n      <Field\n        name=\"content\"\n        component={RenderField}\n        type=\"textarea\"\n        label=\"Content\"\n        validate={[required, minLength(10)]}\n      />\n      <div className=\"text-center\">\n        {error && <Alert color=\"error\">{error}</Alert>}\n        <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n          Submit\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool,\n  error: PropTypes.string,\n  sent: PropTypes.bool\n};\n\nexport default reduxForm({\n  form: 'contact',\n  enableReinitialize: true\n})(ContactForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/contact/components/ContactForm.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { SubmissionError } from 'redux-form';\nimport { LayoutCenter } from '../../common/components';\nimport { PageLayout } from '../../common/components/web';\n\nimport ContactForm from './ContactForm';\nimport settings from '../../../../../settings';\n\nexport default class ContactView extends React.Component {\n  static propTypes = {\n    contact: PropTypes.func.isRequired,\n    onFormSubmitted: PropTypes.func.isRequired\n  };\n\n  state = {\n    sent: false\n  };\n\n  onSubmit = ({ contact, onFormSubmitted }) => async values => {\n    const result = await contact(values);\n\n    if (result.errors) {\n      let submitError = {\n        _error: 'Contact request failed!'\n      };\n      result.errors.map(error => (submitError[error.field] = error.message));\n      throw new SubmissionError(submitError);\n    }\n\n    this.setState({ sent: result });\n    onFormSubmitted();\n  };\n\n  render() {\n    const { contact, onFormSubmitted } = this.props;\n\n    const renderMetaData = () => (\n      <Helmet\n        title={`${settings.app.name} - Contact Us`}\n        meta={[\n          {\n            name: 'description',\n            content: `${settings.app.name} - Contact us example page`\n          }\n        ]}\n      />\n    );\n\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <LayoutCenter>\n          <h1 className=\"text-center\">Contact Us</h1>\n          <ContactForm onSubmit={this.onSubmit({ contact, onFormSubmitted })} sent={this.state.sent} />\n        </LayoutCenter>\n      </PageLayout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/contact/components/ContactView.web.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { graphql, compose } from 'react-apollo';\nimport { reset } from 'redux-form';\n\nimport ContactView from '../components/ContactView';\n\nimport CONTACT from '../graphql/Contact.graphql';\n\nclass Contact extends React.Component {\n  render() {\n    return <ContactView {...this.props} />;\n  }\n}\n\nconst ContactWithApollo = compose(\n  graphql(CONTACT, {\n    props: ({ mutate }) => ({\n      contact: async ({ name, email, content }) => {\n        try {\n          const { data: { contact } } = await mutate({\n            variables: { input: { name, email, content } }\n          });\n\n          if (contact.errors) {\n            return { errors: contact.errors };\n          }\n\n          return contact;\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  }),\n  connect(null, dispatch => ({\n    onFormSubmitted() {\n      dispatch(reset('contact'));\n    }\n  }))\n)(Contact);\n\nexport default ContactWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/contact/containers/Contact.jsx","import React from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport { MenuItem } from '../../modules/common/components/web';\nimport Contact from './containers/Contact';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: <Route exact path=\"/contact\" component={Contact} />,\n  navItem: (\n    <MenuItem key=\"contact\">\n      <NavLink to=\"/contact\" className=\"nav-link\" activeClassName=\"active\">\n        Contact Us\n      </NavLink>\n    </MenuItem>\n  )\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/contact/index.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { PageLayout, Button } from '../../common/components/web';\nimport settings from '../../../../../settings';\n\nconst Section = styled.section`\n  margin-bottom: 30px;\n  text-align: center;\n`;\n\nconst CounterView = ({ loading, counter, addCounter, reduxCount, onReduxIncrement }) => {\n  const renderMetaData = () => (\n    <Helmet\n      title={`${settings.app.name} - Counter`}\n      meta={[\n        {\n          name: 'description',\n          content: `${settings.app.name} - Counter example page`\n        }\n      ]}\n    />\n  );\n\n  if (loading) {\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <div className=\"text-center\">Loading...</div>\n      </PageLayout>\n    );\n  } else {\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <Section>\n          <p>\n            Current counter, is {counter.amount}. This is being stored server-side in the database and using Apollo\n            subscription for real-time updates.\n          </p>\n          <Button id=\"graphql-button\" color=\"primary\" onClick={addCounter(1)}>\n            Click to increase counter\n          </Button>\n        </Section>\n        <Section>\n          <p>Current reduxCount, is {reduxCount}. This is being stored client-side with Redux.</p>\n          <Button id=\"redux-button\" color=\"primary\" onClick={onReduxIncrement(1)}>\n            Click to increase reduxCount\n          </Button>\n        </Section>\n      </PageLayout>\n    );\n  }\n};\n\nCounterView.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  counter: PropTypes.object,\n  addCounter: PropTypes.func.isRequired,\n  reduxCount: PropTypes.number.isRequired,\n  onReduxIncrement: PropTypes.func.isRequired\n};\n\nexport default CounterView;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/counter/components/CounterView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { graphql, compose } from 'react-apollo';\nimport update from 'immutability-helper';\n\nimport CounterView from '../components/CounterView';\n\nimport COUNTER_QUERY from '../graphql/CounterQuery.graphql';\nimport ADD_COUNTER from '../graphql/AddCounter.graphql';\nimport COUNTER_SUBSCRIPTION from '../graphql/CounterSubscription.graphql';\n\nclass Counter extends React.Component {\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    subscribeToMore: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.subscription = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      // Subscribe or re-subscribe\n      if (!this.subscription) {\n        this.subscribeToCount();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription();\n    }\n  }\n\n  subscribeToCount() {\n    const { subscribeToMore } = this.props;\n    this.subscription = subscribeToMore({\n      document: COUNTER_SUBSCRIPTION,\n      variables: {},\n      updateQuery: (prev, { subscriptionData: { data: { counterUpdated: { amount } } } }) => {\n        return update(prev, {\n          counter: {\n            amount: {\n              $set: amount\n            }\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    return <CounterView {...this.props} />;\n  }\n}\n\nconst CounterWithApollo = compose(\n  graphql(COUNTER_QUERY, {\n    props({ data: { loading, error, counter, subscribeToMore } }) {\n      if (error) throw new Error(error);\n      return { loading, counter, subscribeToMore };\n    }\n  }),\n  graphql(ADD_COUNTER, {\n    props: ({ ownProps, mutate }) => ({\n      addCounter(amount) {\n        return () =>\n          mutate({\n            variables: { amount },\n            updateQueries: {\n              counterQuery: (prev, { mutationResult }) => {\n                const newAmount = mutationResult.data.addCounter.amount;\n                return update(prev, {\n                  counter: {\n                    amount: {\n                      $set: newAmount\n                    }\n                  }\n                });\n              }\n            },\n            optimisticResponse: {\n              __typename: 'Mutation',\n              addCounter: {\n                __typename: 'Counter',\n                amount: ownProps.counter.amount + 1\n              }\n            }\n          });\n      }\n    })\n  })\n)(Counter);\n\nexport default connect(\n  state => ({ reduxCount: state.counter.reduxCount }),\n  dispatch => ({\n    onReduxIncrement(value) {\n      return () =>\n        dispatch({\n          type: 'COUNTER_INCREMENT',\n          value: Number(value)\n        });\n    }\n  })\n)(CounterWithApollo);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/counter/containers/Counter.jsx","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Counter from './containers/Counter';\nimport reducers from './reducers';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: <Route exact path=\"/\" component={Counter} />,\n  reducer: { counter: reducers }\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/counter/index.web.jsx","import React, {Component} from 'react'\nimport {Row, Col} from 'reactstrap'\n\n// import Widget02 from '../Widgets/Widget02'\n// import './styles.css'\n// import CompanyData from './companyData'\n// import Coin from './coin'\n\nexport default class Home extends Component {\n  render () {\n    return (\n      <div className='animated fadeIn'>\n        <p>hallo alles goed</p>\n        {/* <Row>\n            <Coin />\n             <div className='col-8 fixed'>\n               <div className=\"sticky-top\" style={{marginTop:0}}>\n                 <CompanyData />\n               </div>\n             </div>\n          </Row> */}\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/home/containers/home.jsx","import React from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport { MenuItem } from '../../modules/common/components/web';\n\nimport Home from './containers/home';\n// import PostEdit from './containers/PostEdit';\n//\n// import reducers from './reducers';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: <Route exact path=\"/home\" component={Home} />,\n  navItem: (\n    <MenuItem key=\"/home\">\n      <NavLink to=\"/home\" className=\"nav-link\" activeClassName=\"active\">\n        Posts\n      </NavLink>\n    </MenuItem>\n  )\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/home/index.web.jsx","import counter from './counter';\nimport post from './post';\nimport upload from './upload';\nimport user from './user';\nimport subscription from './subscription';\nimport contact from './contact';\nimport home from './home';\nimport pageNotFound from './pageNotFound';\nimport './favicon';\n\nimport Feature from './connector';\n\nexport default new Feature(counter, home, post, upload, user, subscription, contact, pageNotFound);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/index.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport { PageLayout, Button } from '../../common/components/web';\nimport settings from '../../../../../settings';\n\nconst Section = styled.section`\n  text-align: center;\n`;\n\nconst PageNotFound = ({ staticContext = {} }) => {\n  staticContext.pageNotFound = true;\n  return (\n    <PageLayout>\n      <Section>\n        <Helmet\n          title={`${settings.app.name} - Page not found`}\n          meta={[\n            {\n              name: 'description',\n              content: `${settings.app.name} - Page not found`\n            }\n          ]}\n        />\n        <h2>Page not found - 404</h2>\n        <Link to=\"/\">\n          <Button className=\"home-link\" color=\"primary\">\n            Go to Homepage\n          </Button>\n        </Link>\n      </Section>\n    </PageLayout>\n  );\n};\n\nPageNotFound.propTypes = {\n  staticContext: PropTypes.object\n};\n\nexport default PageNotFound;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/pageNotFound/containers/PageNotFound.jsx","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport PageNotFound from './containers/PageNotFound';\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: <Route component={PageNotFound} />\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/pageNotFound/index.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, RenderField, Row, Col, Label, Button } from '../../common/components/web';\nimport { required, minLength } from '../../../../common/validation';\n\nconst PostCommentForm = ({ handleSubmit, submitting, initialValues, onSubmit }) => {\n  let operation = 'Add';\n  if (initialValues.id !== null) {\n    operation = 'Edit';\n  }\n\n  return (\n    <Form name=\"comment\" onSubmit={handleSubmit(onSubmit)}>\n      <Row>\n        <Col xs={2}>\n          <Label>{operation} comment</Label>\n        </Col>\n        <Col xs={8}>\n          <Field name=\"content\" component={RenderField} type=\"text\" validate={[required, minLength(1)]} />\n        </Col>\n        <Col xs={2}>\n          <Button color=\"primary\" type=\"submit\" className=\"float-right\" disabled={submitting}>\n            Save\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nPostCommentForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool\n};\n\nexport default reduxForm({\n  form: 'comment',\n  enableReinitialize: true\n})(PostCommentForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/components/PostCommentForm.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Button } from '../../common/components/web';\nimport PostCommentForm from './PostCommentForm';\n\nexport default class PostCommentsView extends React.PureComponent {\n  static propTypes = {\n    postId: PropTypes.number.isRequired,\n    comments: PropTypes.array.isRequired,\n    comment: PropTypes.object,\n    addComment: PropTypes.func.isRequired,\n    editComment: PropTypes.func.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n    onCommentSelect: PropTypes.func.isRequired,\n    onFormSubmitted: PropTypes.func.isRequired,\n    subscribeToMore: PropTypes.func.isRequired\n  };\n\n  hendleEditComment = (id, content) => {\n    const { onCommentSelect } = this.props;\n    onCommentSelect({ id, content });\n  };\n\n  hendleDeleteComment = id => {\n    const { comment, onCommentSelect, deleteComment } = this.props;\n\n    if (comment.id === id) {\n      onCommentSelect({ id: null, content: '' });\n    }\n\n    deleteComment(id);\n  };\n\n  onSubmit = () => values => {\n    const { comment, postId, addComment, editComment, onCommentSelect, onFormSubmitted } = this.props;\n\n    if (comment.id === null) {\n      addComment(values.content, postId);\n    } else {\n      editComment(comment.id, values.content);\n    }\n\n    onCommentSelect({ id: null, content: '' });\n    onFormSubmitted();\n  };\n\n  render() {\n    const { postId, comment, comments } = this.props;\n\n    const columns = [\n      {\n        title: 'Content',\n        dataIndex: 'content',\n        key: 'content'\n      },\n      {\n        title: 'Actions',\n        key: 'actions',\n        width: 120,\n        render: (text, record) => (\n          <div style={{ width: 120 }}>\n            <Button\n              color=\"primary\"\n              size=\"sm\"\n              className=\"edit-comment\"\n              onClick={() => this.hendleEditComment(record.id, record.content)}\n            >\n              Edit\n            </Button>{' '}\n            <Button\n              color=\"primary\"\n              size=\"sm\"\n              className=\"delete-comment\"\n              onClick={() => this.hendleDeleteComment(record.id)}\n            >\n              Delete\n            </Button>\n          </div>\n        )\n      }\n    ];\n\n    return (\n      <div>\n        <h3>Comments</h3>\n        <PostCommentForm postId={postId} onSubmit={this.onSubmit()} initialValues={comment} />\n        <h1 />\n        <Table dataSource={comments} columns={columns} />\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/components/PostCommentsView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nimport { PageLayout } from '../../common/components/web';\nimport PostForm from './PostForm';\nimport PostComments from '../containers/PostComments';\nimport settings from '../../../../../settings';\n\nconst onSubmit = (post, addPost, editPost) => values => {\n  if (post) {\n    editPost(post.id, values.title, values.content);\n  } else {\n    addPost(values.title, values.content);\n  }\n};\n\nconst PostEditView = ({ loading, post, match, location, subscribeToMore, addPost, editPost }) => {\n  let postObj = post;\n\n  // if new post was just added read it from router\n  if (!postObj && location.state) {\n    postObj = location.state.post;\n  }\n\n  const renderMetaData = () => (\n    <Helmet\n      title={`${settings.app.name} - Edit post`}\n      meta={[\n        {\n          name: 'description',\n          content: 'Edit post example page'\n        }\n      ]}\n    />\n  );\n\n  if (loading && !postObj) {\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <div className=\"text-center\">Loading...</div>\n      </PageLayout>\n    );\n  } else {\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <Link id=\"back-button\" to=\"/posts\">\n          Back\n        </Link>\n        <h2>{post ? 'Edit' : 'Create'} Post</h2>\n        <PostForm onSubmit={onSubmit(postObj, addPost, editPost)} initialValues={postObj} />\n        <br />\n        {postObj && (\n          <PostComments\n            postId={Number(match.params.id)}\n            comments={postObj.comments}\n            subscribeToMore={subscribeToMore}\n          />\n        )}\n      </PageLayout>\n    );\n  }\n};\n\nPostEditView.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  post: PropTypes.object,\n  addPost: PropTypes.func.isRequired,\n  editPost: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  subscribeToMore: PropTypes.func.isRequired\n};\n\nexport default PostEditView;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/components/PostEditView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, RenderField, Button } from '../../common/components/web';\nimport { required } from '../../../../common/validation';\n\nconst PostForm = ({ handleSubmit, submitting, onSubmit }) => {\n  return (\n    <Form name=\"post\" onSubmit={handleSubmit(onSubmit)}>\n      <Field name=\"title\" component={RenderField} type=\"text\" label=\"Title\" validate={required} />\n      <Field name=\"content\" component={RenderField} type=\"text\" label=\"Content\" validate={required} />\n      <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n        Save\n      </Button>\n    </Form>\n  );\n};\n\nPostForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool\n};\n\nexport default reduxForm({\n  form: 'post',\n  enableReinitialize: true\n})(PostForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/components/PostForm.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { PageLayout, Table, Button } from '../../common/components/web';\nimport settings from '../../../../../settings';\n\nexport default class PostList extends React.PureComponent {\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    posts: PropTypes.object,\n    deletePost: PropTypes.func.isRequired,\n    loadMoreRows: PropTypes.func.isRequired\n  };\n\n  hendleDeletePost = id => {\n    const { deletePost } = this.props;\n    deletePost(id);\n  };\n\n  renderLoadMore = (posts, loadMoreRows) => {\n    if (posts.pageInfo.hasNextPage) {\n      return (\n        <Button id=\"load-more\" color=\"primary\" onClick={loadMoreRows}>\n          Load more ...\n        </Button>\n      );\n    }\n  };\n\n  renderMetaData = () => (\n    <Helmet\n      title={`${settings.app.name} - Posts list`}\n      meta={[\n        {\n          name: 'description',\n          content: `${settings.app.name} - List of all posts example page`\n        }\n      ]}\n    />\n  );\n\n  render() {\n    const { loading, posts, loadMoreRows } = this.props;\n    if (loading) {\n      return (\n        <PageLayout>\n          {this.renderMetaData()}\n          <div className=\"text-center\">Loading...</div>\n        </PageLayout>\n      );\n    } else {\n      const columns = [\n        {\n          title: 'Title',\n          dataIndex: 'title',\n          key: 'title',\n          render: (text, record) => (\n            <Link className=\"post-link\" to={`/post/${record.id}`}>\n              {text}\n            </Link>\n          )\n        },\n        {\n          title: 'Actions',\n          key: 'actions',\n          width: 50,\n          render: (text, record) => (\n            <Button\n              color=\"primary\"\n              size=\"sm\"\n              className=\"delete-button\"\n              onClick={() => this.hendleDeletePost(record.id)}\n            >\n              Delete\n            </Button>\n          )\n        }\n      ];\n      return (\n        <PageLayout>\n          {this.renderMetaData()}\n          <h2>Posts</h2>\n          <Link to=\"/post/0\">\n            <Button color=\"primary\">Add</Button>\n          </Link>\n          <h1 />\n          <Table dataSource={posts.edges.map(({ node }) => node)} columns={columns} />\n          <div>\n            <small>\n              ({posts.edges.length} / {posts.totalCount})\n            </small>\n          </div>\n          {this.renderLoadMore(posts, loadMoreRows)}\n        </PageLayout>\n      );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/components/PostList.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport update from 'immutability-helper';\n\nimport PostList from '../components/PostList';\n\nimport POSTS_QUERY from '../graphql/PostsQuery.graphql';\nimport POSTS_SUBSCRIPTION from '../graphql/PostsSubscription.graphql';\nimport DELETE_POST from '../graphql/DeletePost.graphql';\n\nexport function AddPost(prev, node) {\n  // ignore if duplicate\n  if (node.id !== null && prev.posts.edges.some(post => node.id === post.cursor)) {\n    return prev;\n  }\n\n  const edge = {\n    cursor: node.id,\n    node: node,\n    __typename: 'PostEdges'\n  };\n\n  return update(prev, {\n    posts: {\n      totalCount: {\n        $set: prev.posts.totalCount + 1\n      },\n      edges: {\n        $unshift: [edge]\n      }\n    }\n  });\n}\n\nfunction DeletePost(prev, id) {\n  const index = prev.posts.edges.findIndex(x => x.node.id === id);\n\n  // ignore if not found\n  if (index < 0) {\n    return prev;\n  }\n\n  return update(prev, {\n    posts: {\n      totalCount: {\n        $set: prev.posts.totalCount - 1\n      },\n      edges: {\n        $splice: [[index, 1]]\n      }\n    }\n  });\n}\n\nclass Post extends React.Component {\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    posts: PropTypes.object,\n    subscribeToMore: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.subscription = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      const endCursor = this.props.posts ? this.props.posts.pageInfo.endCursor : 0;\n      const nextEndCursor = nextProps.posts.pageInfo.endCursor;\n\n      // Check if props have changed and, if necessary, stop the subscription\n      if (this.subscription && endCursor !== nextEndCursor) {\n        this.subscription();\n        this.subscription = null;\n      }\n\n      // Subscribe or re-subscribe\n      if (!this.subscription) {\n        this.subscribeToPostList(nextEndCursor);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      // unsubscribe\n      this.subscription();\n    }\n  }\n\n  subscribeToPostList = endCursor => {\n    const { subscribeToMore } = this.props;\n\n    this.subscription = subscribeToMore({\n      document: POSTS_SUBSCRIPTION,\n      variables: { endCursor },\n      updateQuery: (prev, { subscriptionData: { data: { postsUpdated: { mutation, node } } } }) => {\n        let newResult = prev;\n\n        if (mutation === 'CREATED') {\n          newResult = AddPost(prev, node);\n        } else if (mutation === 'DELETED') {\n          newResult = DeletePost(prev, node.id);\n        }\n\n        return newResult;\n      }\n    });\n  };\n\n  render() {\n    return <PostList {...this.props} />;\n  }\n}\n\nexport default compose(\n  graphql(POSTS_QUERY, {\n    options: () => {\n      return {\n        variables: { limit: 10, after: 0 }\n      };\n    },\n    props: ({ data }) => {\n      const { loading, error, posts, fetchMore, subscribeToMore } = data;\n      const loadMoreRows = () => {\n        return fetchMore({\n          variables: {\n            after: posts.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, { fetchMoreResult }) => {\n            const totalCount = fetchMoreResult.posts.totalCount;\n            const newEdges = fetchMoreResult.posts.edges;\n            const pageInfo = fetchMoreResult.posts.pageInfo;\n\n            return {\n              // By returning `cursor` here, we update the `fetchMore` function\n              // to the new cursor.\n              posts: {\n                totalCount,\n                edges: [...previousResult.posts.edges, ...newEdges],\n                pageInfo,\n                __typename: 'Posts'\n              }\n            };\n          }\n        });\n      };\n      if (error) throw new Error(error);\n      return { loading, posts, subscribeToMore, loadMoreRows };\n    }\n  }),\n  graphql(DELETE_POST, {\n    props: ({ mutate }) => ({\n      deletePost: id => {\n        mutate({\n          variables: { id },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            deletePost: {\n              id: id,\n              __typename: 'Post'\n            }\n          },\n          updateQueries: {\n            posts: (prev, { mutationResult: { data: { deletePost } } }) => {\n              return DeletePost(prev, deletePost.id);\n            }\n          }\n        });\n      }\n    })\n  })\n)(Post);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/containers/Post.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { graphql, compose } from 'react-apollo';\nimport update from 'immutability-helper';\nimport { reset } from 'redux-form';\n\nimport PostCommentsView from '../components/PostCommentsView';\n\nimport ADD_COMMENT from '../graphql/AddComment.graphql';\nimport EDIT_COMMENT from '../graphql/EditComment.graphql';\nimport DELETE_COMMENT from '../graphql/DeleteComment.graphql';\nimport COMMENT_SUBSCRIPTION from '../graphql/CommentSubscription.graphql';\n\nfunction AddComment(prev, node) {\n  // ignore if duplicate\n  if (node.id !== null && prev.post.comments.some(comment => node.id === comment.id)) {\n    return prev;\n  }\n\n  return update(prev, {\n    post: {\n      comments: {\n        $push: [node]\n      }\n    }\n  });\n}\n\nfunction DeleteComment(prev, id) {\n  const index = prev.post.comments.findIndex(x => x.id === id);\n\n  // ignore if not found\n  if (index < 0) {\n    return prev;\n  }\n\n  return update(prev, {\n    post: {\n      comments: {\n        $splice: [[index, 1]]\n      }\n    }\n  });\n}\n\nclass PostComments extends React.Component {\n  static propTypes = {\n    postId: PropTypes.number.isRequired,\n    comments: PropTypes.array.isRequired,\n    comment: PropTypes.object.isRequired,\n    onCommentSelect: PropTypes.func.isRequired,\n    subscribeToMore: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.subscription = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Check if props have changed and, if necessary, stop the subscription\n    if (this.subscription && this.props.postId !== nextProps.postId) {\n      this.subscription = null;\n    }\n\n    // Subscribe or re-subscribe\n    if (!this.subscription) {\n      this.subscribeToCommentList(nextProps.postId);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onCommentSelect({ id: null, content: '' });\n\n    if (this.subscription) {\n      // unsubscribe\n      this.subscription();\n    }\n  }\n\n  subscribeToCommentList = postId => {\n    const { subscribeToMore } = this.props;\n\n    this.subscription = subscribeToMore({\n      document: COMMENT_SUBSCRIPTION,\n      variables: { postId },\n      updateQuery: (prev, { subscriptionData: { data: { commentUpdated: { mutation, id, node } } } }) => {\n        let newResult = prev;\n\n        if (mutation === 'CREATED') {\n          newResult = AddComment(prev, node);\n        } else if (mutation === 'DELETED') {\n          newResult = DeleteComment(prev, id);\n        }\n\n        return newResult;\n      }\n    });\n  };\n\n  render() {\n    return <PostCommentsView {...this.props} />;\n  }\n}\n\nconst PostCommentsWithApollo = compose(\n  graphql(ADD_COMMENT, {\n    props: ({ mutate }) => ({\n      addComment: (content, postId) =>\n        mutate({\n          variables: { input: { content, postId } },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            addComment: {\n              __typename: 'Comment',\n              id: null,\n              content: content\n            }\n          },\n          updateQueries: {\n            post: (prev, { mutationResult: { data: { addComment } } }) => {\n              if (prev.post) {\n                return AddComment(prev, addComment);\n              }\n            }\n          }\n        })\n    })\n  }),\n  graphql(EDIT_COMMENT, {\n    props: ({ ownProps: { postId }, mutate }) => ({\n      editComment: (id, content) =>\n        mutate({\n          variables: { input: { id, postId, content } },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            editComment: {\n              __typename: 'Comment',\n              id: id,\n              content: content\n            }\n          }\n        })\n    })\n  }),\n  graphql(DELETE_COMMENT, {\n    props: ({ ownProps: { postId }, mutate }) => ({\n      deleteComment: id =>\n        mutate({\n          variables: { input: { id, postId } },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            deleteComment: {\n              __typename: 'Comment',\n              id: id\n            }\n          },\n          updateQueries: {\n            post: (prev, { mutationResult: { data: { deleteComment } } }) => {\n              if (prev.post) {\n                return DeleteComment(prev, deleteComment.id);\n              }\n            }\n          }\n        })\n    })\n  })\n)(PostComments);\n\nexport default connect(\n  state => ({ comment: state.post.comment }),\n  dispatch => ({\n    onCommentSelect(comment) {\n      dispatch({\n        type: 'COMMENT_SELECT',\n        value: comment\n      });\n    },\n    onFormSubmitted() {\n      dispatch(reset('comment'));\n    }\n  })\n)(PostCommentsWithApollo);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/containers/PostComments.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\n\nimport PostEditView from '../components/PostEditView';\nimport { AddPost } from './Post';\n\nimport POST_QUERY from '../graphql/PostQuery.graphql';\nimport ADD_POST from '../graphql/AddPost.graphql';\nimport EDIT_POST from '../graphql/EditPost.graphql';\nimport POST_SUBSCRIPTION from '../graphql/PostSubscription.graphql';\n\nclass PostEdit extends React.Component {\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    post: PropTypes.object,\n    subscribeToMore: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.subscription = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading) {\n      // Check if props have changed and, if necessary, stop the subscription\n      if (this.subscription && this.props.post.id !== nextProps.post.id) {\n        this.subscription();\n        this.subscription = null;\n      }\n\n      // Subscribe or re-subscribe\n      if (!this.subscription && nextProps.post) {\n        this.subscribeToPostEdit(nextProps.post.id);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      // unsubscribe\n      this.subscription();\n    }\n  }\n\n  subscribeToPostEdit = postId => {\n    const { subscribeToMore } = this.props;\n\n    this.subscription = subscribeToMore({\n      document: POST_SUBSCRIPTION,\n      variables: { id: postId }\n    });\n  };\n\n  render() {\n    return <PostEditView {...this.props} />;\n  }\n}\n\nexport default compose(\n  graphql(POST_QUERY, {\n    options: props => {\n      let id = 0;\n      if (props.match) {\n        id = props.match.params.id;\n      } else if (props.navigation) {\n        id = props.navigation.state.params.id;\n      }\n\n      return {\n        variables: { id }\n      };\n    },\n    props({ data: { loading, error, post, subscribeToMore } }) {\n      if (error) throw new Error(error);\n      return { loading, post, subscribeToMore };\n    }\n  }),\n  graphql(ADD_POST, {\n    props: ({ ownProps: { history, navigation }, mutate }) => ({\n      addPost: async (title, content) => {\n        let postData = await mutate({\n          variables: { input: { title, content } },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            addPost: {\n              __typename: 'Post',\n              id: null,\n              title: title,\n              content: content,\n              comments: []\n            }\n          },\n          updateQueries: {\n            posts: (prev, { mutationResult: { data: { addPost } } }) => {\n              return AddPost(prev, addPost);\n            }\n          }\n        });\n\n        if (history) {\n          return history.push('/post/' + postData.data.addPost.id, {\n            post: postData.data.addPost\n          });\n        } else if (navigation) {\n          return navigation.setParams({\n            id: postData.data.addPost.id,\n            post: postData.data.addPost\n          });\n        }\n      }\n    })\n  }),\n  graphql(EDIT_POST, {\n    props: ({ ownProps: { history, navigation }, mutate }) => ({\n      editPost: async (id, title, content) => {\n        await mutate({\n          variables: { input: { id, title, content } }\n        });\n\n        if (history) {\n          return history.push('/posts');\n        }\n        if (navigation) {\n          return navigation.goBack();\n        }\n      }\n    })\n  })\n)(PostEdit);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/containers/PostEdit.jsx","import React from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport { MenuItem } from '../../modules/common/components/web';\n\nimport Post from './containers/Post';\nimport PostEdit from './containers/PostEdit';\n\nimport reducers from './reducers';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: [<Route exact path=\"/posts\" component={Post} />, <Route exact path=\"/post/:id\" component={PostEdit} />],\n  navItem: (\n    <MenuItem key=\"/posts\">\n      <NavLink to=\"/posts\" className=\"nav-link\" activeClassName=\"active\">\n        Posts\n      </NavLink>\n    </MenuItem>\n  ),\n  reducer: { post: reducers }\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/post/index.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Alert, CardGroup, CardTitle, CardText } from '../../common/components/web';\n\nexport default class CancelSubscriptionView extends React.Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    active: PropTypes.bool,\n    cancel: PropTypes.func.isRequired\n  };\n\n  state = {\n    cancelling: false,\n    errors: null\n  };\n\n  onClick = async () => {\n    this.setState({ cancelling: true });\n    const { errors } = await this.props.cancel();\n    if (errors) {\n      this.setState({\n        cancelling: false,\n        errors\n      });\n    }\n  };\n\n  render() {\n    const { loading, active } = this.props;\n    const { errors } = this.state;\n\n    if (loading) return <p>Loading...</p>;\n\n    return (\n      <CardGroup>\n        <CardTitle>Subscription</CardTitle>\n        <CardText>\n          {active && (\n            <Button color=\"danger\" onClick={this.onClick} disabled={this.state.cancelling}>\n              Cancel Subscription\n            </Button>\n          )}\n          {!active && <span>You do not have a subscription.</span>}\n          {errors && <Alert color=\"error\">{errors}</Alert>}\n        </CardText>\n      </CardGroup>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/components/CancelSubscriptionView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button, CardGroup, CardTitle, CardText } from '../../common/components/web';\n\nconst CardInfoView = ({ loading, expiryMonth, expiryYear, last4, brand }) => {\n  return (\n    <div>\n      {!loading &&\n        expiryMonth &&\n        expiryYear &&\n        last4 &&\n        brand && (\n          <CardGroup>\n            <CardTitle>Card Info</CardTitle>\n            <CardText>\n              card: {brand} ************{last4}\n            </CardText>\n            <CardText>\n              expires: {expiryMonth}/{expiryYear}\n            </CardText>\n            <CardText>\n              <Link to=\"/update-card\">\n                <Button color=\"primary\">Update Card</Button>\n              </Link>\n            </CardText>\n          </CardGroup>\n        )}\n    </div>\n  );\n};\n\nCardInfoView.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  expiryMonth: PropTypes.number,\n  expiryYear: PropTypes.number,\n  last4: PropTypes.string,\n  brand: PropTypes.string\n};\n\nexport default CardInfoView;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/components/CardInfoView.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageLayout } from '../../common/components/web';\n\nconst SubscribersOnlyView = ({ loading, number }) => {\n  return (\n    <PageLayout>\n      <h1>Private</h1>\n      <p>Your magic number is {loading ? 'loading...' : number}.</p>\n    </PageLayout>\n  );\n};\n\nSubscribersOnlyView.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  number: PropTypes.number\n};\n\nexport default SubscribersOnlyView;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/components/SubscribersOnlyView.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport { Form, RenderField, Button, Alert, Label } from '../../common/components/web';\n\nimport { required } from '../../../../common/validation';\n\nclass SubscriptionCardForm extends React.Component {\n  static propTypes = {\n    submitting: PropTypes.bool,\n    action: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func,\n    onSubmit: PropTypes.func\n  };\n\n  onSubmit = async ({ name }) => {\n    const { stripe } = this.props;\n    const { token, error } = await stripe.createToken({ name });\n    if (error) return;\n\n    const { id, card: { exp_month, exp_year, last4, brand } } = token;\n\n    await this.props.onSubmit({\n      token: id,\n      expiryMonth: exp_month,\n      expiryYear: exp_year,\n      last4,\n      brand\n    });\n  };\n\n  render() {\n    const { handleSubmit, submitting, action, error } = this.props;\n    return (\n      <Form name=\"subscription\" onSubmit={handleSubmit(this.onSubmit)}>\n        <Field name=\"name\" component={RenderField} type=\"text\" label=\"Name On Card\" validate={required} />\n        <Label>Payment Info</Label>\n        <CardElement className=\"form-control\" style={{ base: { lineHeight: '30px' } }} />\n        {error && <Alert color=\"error\">{error}</Alert>}\n        <Button color=\"primary\" type=\"submit\" disabled={submitting} style={{ marginTop: 15 }}>\n          {action}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default injectStripe(\n  reduxForm({\n    form: 'subscription'\n  })(SubscriptionCardForm)\n);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/components/SubscriptionCardForm.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { SubmissionError } from 'redux-form';\nimport { Elements } from 'react-stripe-elements';\n\nimport { LayoutCenter } from '../../common/components';\nimport { PageLayout } from '../../common/components/web';\nimport SubscriptionCardForm from './SubscriptionCardForm';\nimport settings from '../../../../../settings';\n\nexport default class SubscriptionView extends React.Component {\n  static propTypes = {\n    subscribe: PropTypes.func.isRequired\n  };\n\n  state = {\n    client: !__SSR__ && !__TEST__\n  };\n\n  componentDidMount() {\n    this.setState({ client: __CLIENT__ });\n  }\n\n  onSubmit = subscribe => async values => {\n    const result = await subscribe(values);\n\n    if (result.errors) {\n      let submitError = {\n        _error: 'Transaction failed!'\n      };\n      result.errors.map(error => (submitError[error.field] = error.message));\n      throw new SubmissionError(submitError);\n    }\n  };\n\n  render() {\n    const { subscribe } = this.props;\n\n    const renderMetaData = () => (\n      <Helmet\n        title={`${settings.app.name} - Subscription`}\n        meta={[\n          {\n            name: 'description',\n            content: `${settings.app.name} - Subscription page`\n          }\n        ]}\n      />\n    );\n\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <LayoutCenter>\n          <h1 className=\"text-center\">Subscription!</h1>\n          {this.state.client && (\n            <Elements>\n              <SubscriptionCardForm onSubmit={this.onSubmit(subscribe)} action=\"Subscribe\" />\n            </Elements>\n          )}\n        </LayoutCenter>\n      </PageLayout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/components/SubscriptionView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { SubmissionError } from 'redux-form';\nimport { Elements } from 'react-stripe-elements';\nimport { LayoutCenter } from '../../common/components';\nimport { PageLayout } from '../../common/components/web';\n\nimport SubscriptionCardForm from './SubscriptionCardForm';\nimport settings from '../../../../../settings';\n\nexport default class UpdateCardView extends React.Component {\n  static propTypes = {\n    updateCard: PropTypes.func.isRequired\n  };\n\n  onSubmit = updateCard => async values => {\n    const result = await updateCard(values);\n\n    if (result.errors) {\n      let submitError = {\n        _error: 'Update failed!'\n      };\n      result.errors.map(error => (submitError[error.field] = error.message));\n      throw new SubmissionError(submitError);\n    }\n  };\n\n  render() {\n    const { updateCard } = this.props;\n\n    const renderMetaData = () => (\n      <Helmet\n        title={`${settings.app.name} - Update Card`}\n        meta={[\n          {\n            name: 'description',\n            content: `${settings.app.name} - Update card page`\n          }\n        ]}\n      />\n    );\n\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <LayoutCenter>\n          <h1 className=\"text-center\">Update card!</h1>\n          <Elements>\n            <SubscriptionCardForm onSubmit={this.onSubmit(updateCard)} action=\"Update Card\" />\n          </Elements>\n        </LayoutCenter>\n      </PageLayout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/components/UpdateCardView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\n\nimport SUBSCRIPTION_QUERY from '../graphql/SubscriptionQuery.graphql';\n\nimport { AuthNav, AuthRoute } from '../../user/containers/Auth';\n\nconst SubscriberNav = ({ loading, active, children, ...rest }) => {\n  return <AuthNav {...rest}>{loading || !active ? null : children}</AuthNav>;\n};\n\nSubscriberNav.propTypes = {\n  active: PropTypes.bool,\n  loading: PropTypes.bool.isRequired,\n  children: PropTypes.object\n};\n\nconst SubscriberNavWithApollo = compose(\n  graphql(SUBSCRIPTION_QUERY, {\n    props: ({ data }) => {\n      const { loading, subscription } = data;\n      return {\n        loading,\n        active: subscription && subscription.active\n      };\n    }\n  })\n)(SubscriberNav);\n\nconst SubscribeRedirect = () => <Redirect to=\"/subscription\" />;\n\nconst SubscriberRoute = ({ loading, active, component, ...rest }) => {\n  return <AuthRoute component={!loading && active ? component : SubscribeRedirect} {...rest} />;\n};\n\nSubscriberRoute.propTypes = {\n  component: PropTypes.func,\n  loading: PropTypes.bool.isRequired,\n  active: PropTypes.bool\n};\n\nconst SubscriberRouteWithApollo = compose(\n  graphql(SUBSCRIPTION_QUERY, {\n    props: ({ data }) => {\n      const { loading, subscription } = data;\n      return {\n        loading,\n        active: subscription && subscription.active\n      };\n    }\n  })\n)(SubscriberRoute);\n\nexport { SubscriberNavWithApollo as SubscriberNav };\nexport { SubscriberRouteWithApollo as SubscriberRoute };\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/containers/Auth.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\n\nimport CancelSubscriptionView from '../components/CancelSubscriptionView';\n\nimport SUBSCRIPTION_QUERY from '../graphql/SubscriptionQuery.graphql';\nimport CARD_INFO from '../graphql/CardInfoQuery.graphql';\nimport CANCEL from '../graphql/CancelSubscription.graphql';\n\nconst CancelSubscription = ({ loading, active, cancel }) => {\n  return <CancelSubscriptionView loading={__SERVER__ ? true : loading} active={active} cancel={cancel} />;\n};\n\nCancelSubscription.propTypes = {\n  cancel: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  active: PropTypes.bool\n};\n\nconst CancelSubscriptionWithApollo = compose(\n  graphql(SUBSCRIPTION_QUERY, {\n    // i'm not sure why but this query causes SSR to hang. it seems to have\n    // to do with the fact that this query exists in other places in the tree.\n    // possibly having to do with the query name, as if you duplicate the query\n    // file and change the query name to `SubscriptionDataTwo`, then it works.\n    // skipping for now on server.\n    skip: __SERVER__,\n    props({ data: { loading, subscription } }) {\n      return {\n        loading,\n        active: subscription && subscription.active\n      };\n    }\n  }),\n  graphql(CANCEL, {\n    props: ({ mutate }) => ({\n      cancel: async () => {\n        try {\n          const { data: { cancel } } = await mutate({\n            update: (store, { data: { cancel } }) => {\n              const data = store.readQuery({ query: SUBSCRIPTION_QUERY });\n              data.subscription = cancel;\n              store.writeQuery({ query: SUBSCRIPTION_QUERY, data });\n            },\n            refetchQueries: [{ query: CARD_INFO }]\n          });\n\n          if (cancel.errors) {\n            return { errors: cancel.errors.map(e => e.message).join('\\n') };\n          }\n\n          return true;\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })\n)(CancelSubscription);\n\nexport default CancelSubscriptionWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/containers/CancelSubscription.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\n\nimport CardInfoView from '../components/CardInfoView';\n\nimport CARD_INFO_QUERY from '../graphql/CardInfoQuery.graphql';\n\nconst CardInfo = ({ loading, expiryMonth, expiryYear, last4, brand }) => {\n  return (\n    <CardInfoView loading={loading} expiryMonth={expiryMonth} expiryYear={expiryYear} last4={last4} brand={brand} />\n  );\n};\n\nCardInfo.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  expiryMonth: PropTypes.number,\n  expiryYear: PropTypes.number,\n  last4: PropTypes.string,\n  brand: PropTypes.string\n};\n\nconst CardInfoWithApollo = compose(\n  graphql(CARD_INFO_QUERY, {\n    props({ data: { loading, subscriptionCardInfo } }) {\n      return {\n        loading,\n        expiryMonth: subscriptionCardInfo && subscriptionCardInfo.expiryMonth,\n        expiryYear: subscriptionCardInfo && subscriptionCardInfo.expiryYear,\n        last4: subscriptionCardInfo && subscriptionCardInfo.last4,\n        brand: subscriptionCardInfo && subscriptionCardInfo.brand\n      };\n    }\n  })\n)(CardInfo);\n\nexport default CardInfoWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/containers/CardInfo.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, compose } from 'react-apollo';\n\nimport SubscribersOnlyView from '../components/SubscribersOnlyView';\n\nimport NUMBER_QUERY from '../graphql/SubscribersOnlyNumberQuery.graphql';\n\nconst SubscribersOnly = ({ loading, number }) => <SubscribersOnlyView loading={loading} number={number} />;\n\nSubscribersOnly.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  number: PropTypes.number\n};\n\nconst SubscribersOnlyWithApollo = compose(\n  graphql(NUMBER_QUERY, {\n    options: { fetchPolicy: 'network-only' },\n    props({ data: { loading, subscribersOnlyNumber } }) {\n      return { loading, number: subscribersOnlyNumber && subscribersOnlyNumber.number };\n    }\n  })\n)(SubscribersOnly);\n\nexport default SubscribersOnlyWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/containers/SubscribersOnly.js","import React from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { StripeProvider } from 'react-stripe-elements';\n\nimport SubscriptionView from '../components/SubscriptionView';\n\nimport SUBSCRIBE from '../graphql/Subscribe.graphql';\nimport SUBSCRIPTION_QUERY from '../graphql/SubscriptionQuery.graphql';\nimport CARD_INFO from '../graphql/CardInfoQuery.graphql';\n\nimport settings from '../../../../../settings';\n\n// react-stripe-elements will not render on the server.\nclass Subscription extends React.Component {\n  render() {\n    return (\n      <div>\n        {__CLIENT__ ? (\n          <StripeProvider apiKey={settings.subscription.stripePublishableKey}>\n            <SubscriptionView {...this.props} />\n          </StripeProvider>\n        ) : (\n          <SubscriptionView {...this.props} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst SubscriptionViewWithApollo = compose(\n  graphql(SUBSCRIBE, {\n    props: ({ ownProps: { history, navigation }, mutate }) => ({\n      subscribe: async ({ token, expiryMonth, expiryYear, last4, brand }) => {\n        try {\n          const { data: { subscribe } } = await mutate({\n            variables: { input: { token, expiryMonth, expiryYear, last4, brand } },\n            update: (store, { data: { subscribe } }) => {\n              const data = store.readQuery({ query: SUBSCRIPTION_QUERY });\n              data.subscription = subscribe;\n              store.writeQuery({ query: SUBSCRIPTION_QUERY, data });\n            },\n            refetchQueries: [{ query: CARD_INFO }]\n          });\n\n          if (subscribe.errors) {\n            return { errors: subscribe.errors };\n          }\n\n          if (history) {\n            history.push('/subscribers-only');\n          }\n          if (navigation) {\n            navigation.goBack();\n          }\n\n          return subscribe;\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })\n)(Subscription);\n\nexport default SubscriptionViewWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/containers/Subscription.js","import React from 'react';\n\nimport CardInfo from './CardInfo';\nimport CancelSubscription from './CancelSubscription';\n\nconst SubscriptionProfile = () => {\n  return (\n    <div>\n      <CardInfo />\n      <CancelSubscription />\n    </div>\n  );\n};\n\nexport default SubscriptionProfile;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/containers/SubscriptionProfile.js","import React from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { StripeProvider } from 'react-stripe-elements';\n\nimport UpdateCardView from '../components/UpdateCardView';\n\nimport UPDATE_CARD from '../graphql/UpdateCard.graphql';\nimport CARD_INFO from '../graphql/CardInfoQuery.graphql';\n\nimport settings from '../../../../../settings';\n\n// react-stripe-elements will not render on the server.\nclass UpdateCard extends React.Component {\n  render() {\n    return (\n      <div>\n        {__CLIENT__ ? (\n          <StripeProvider apiKey={settings.subscription.stripePublishableKey}>\n            <UpdateCardView {...this.props} />\n          </StripeProvider>\n        ) : (\n          <UpdateCardView {...this.props} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst UpdateCardWithApollo = compose(\n  graphql(UPDATE_CARD, {\n    props: ({ ownProps: { history }, mutate }) => ({\n      updateCard: async ({ token, expiryMonth, expiryYear, last4, brand }) => {\n        try {\n          const { data: { updateCard } } = await mutate({\n            variables: { input: { token, expiryMonth, expiryYear, last4, brand } },\n            refetchQueries: [{ query: CARD_INFO }]\n          });\n\n          if (!updateCard) {\n            return { errors: ['Error updating card.'] };\n          }\n\n          if (history) {\n            history.push('/profile');\n          }\n          return updateCard;\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })\n)(UpdateCard);\n\nexport default UpdateCardWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/containers/UpdateCard.js","import React from 'react';\nimport { Route, NavLink } from 'react-router-dom';\n\nimport { MenuItem } from '../../modules/common/components/web';\nimport Subscription from './containers/Subscription';\nimport SubscribersOnly from './containers/SubscribersOnly';\nimport UpdateCard from './containers/UpdateCard';\nimport { SubscriberRoute } from './containers/Auth';\nimport reducers from './reducers';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  route: [\n    <Route exact path=\"/subscription\" component={Subscription} />,\n    <SubscriberRoute exact scope=\"user\" path=\"/subscribers-only\" component={SubscribersOnly} />,\n    <SubscriberRoute exact scope=\"user\" path=\"/update-card\" component={UpdateCard} />\n  ],\n  navItem: [\n    <MenuItem key=\"/subscribers-only\">\n      <NavLink to=\"/subscribers-only\" className=\"nav-link\" activeClassName=\"active\">\n        Subscribers Only\n      </NavLink>\n    </MenuItem>\n  ],\n  reducer: { subscription: reducers },\n  scriptsInsert: 'https://js.stripe.com/v3/'\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/subscription/index.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport Dropzone from 'react-dropzone';\nimport filesize from 'filesize';\nimport { PageLayout, Row, Col, Table, Button, Alert } from '../../common/components/web';\nimport settings from '../../../../../settings';\n\nexport default class UploadView extends React.PureComponent {\n  static propTypes = {\n    files: PropTypes.array,\n    uploadFiles: PropTypes.func.isRequired,\n    removeFile: PropTypes.func.isRequired\n  };\n\n  state = {\n    error: null\n  };\n\n  renderMetaData = () => (\n    <Helmet\n      title={`${settings.app.name} - Upload`}\n      meta={[\n        {\n          name: 'description',\n          content: `${settings.app.name} - Upload page`\n        }\n      ]}\n    />\n  );\n\n  onDrop = uploadFiles => async files => {\n    const result = await uploadFiles(files);\n    if (result && result.error) {\n      this.setState({ error: result.error });\n    } else {\n      this.setState({ error: null });\n    }\n  };\n\n  hendleRemoveFile = async id => {\n    const { removeFile } = this.props;\n    const result = await removeFile(id);\n    if (result && result.error) {\n      this.setState({ error: result.error });\n    } else {\n      this.setState({ error: null });\n    }\n  };\n\n  render() {\n    const { files, uploadFiles } = this.props;\n    const { error } = this.state;\n\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text, record) => (\n          <a href={record.path} download={text}>\n            {text} ({filesize(record.size)})\n          </a>\n        )\n      },\n      {\n        title: 'Actions',\n        key: 'actions',\n        width: 50,\n        render: (text, record) => (\n          <Button color=\"primary\" size=\"sm\" className=\"delete-button\" onClick={() => this.hendleRemoveFile(record.id)}>\n            Delete\n          </Button>\n        )\n      }\n    ];\n\n    return (\n      <PageLayout>\n        {this.renderMetaData()}\n        <div className=\"text-center\">\n          <Row>\n            <Col xs={4}>\n              <Dropzone onDrop={this.onDrop(uploadFiles)}>\n                <p>Try dropping some files here, or click to select files to upload.</p>\n              </Dropzone>\n            </Col>\n            <Col xs={8}>\n              {error && <Alert color=\"error\">{error}</Alert>}\n              {files && <Table dataSource={files} columns={columns} />}\n            </Col>\n          </Row>\n        </div>\n      </PageLayout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/upload/components/UploadView.web.jsx","import React from 'react';\nimport { graphql, compose } from 'react-apollo';\n\nimport UploadView from '../components/UploadView';\nimport FILES_QUERY from '../graphql/FilesQuery.graphql';\nimport UPLOAD_FILES from '../graphql/UploadFiles.graphql';\nimport REMOVE_FILE from '../graphql/RemoveFile.graphql';\n\nclass Upload extends React.Component {\n  render() {\n    return <UploadView {...this.props} />;\n  }\n}\n\nconst UploadWithApollo = compose(\n  graphql(FILES_QUERY, {\n    options: () => {\n      return {\n        fetchPolicy: 'cache-and-network'\n      };\n    },\n    props({ data: { loading, error, files, refetch } }) {\n      if (error) throw new Error(error);\n      return { loading, files, refetch };\n    }\n  }),\n  graphql(UPLOAD_FILES, {\n    props: ({ ownProps: { refetch }, mutate }) => ({\n      uploadFiles: async files => {\n        try {\n          const { data: { uploadFiles } } = await mutate({\n            variables: { files }\n          });\n          refetch();\n          return uploadFiles;\n        } catch (e) {\n          return { error: e.graphQLErrors[0].message };\n        }\n      }\n    })\n  }),\n  graphql(REMOVE_FILE, {\n    props: ({ ownProps: { refetch }, mutate }) => ({\n      removeFile: async id => {\n        try {\n          const { data: { removeFile } } = await mutate({\n            variables: { id }\n          });\n          refetch();\n          return removeFile;\n        } catch (e) {\n          return { error: e.graphQLErrors[0].message };\n        }\n      }\n    })\n  })\n)(Upload);\n\nexport default UploadWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/upload/containers/Upload.jsx","import React from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport { constructUploadOptions } from 'apollo-fetch-upload';\nimport { MenuItem } from '../../modules/common/components/web';\n\n// Component and helpers\nimport Upload from './containers/Upload';\nimport reducers from './reducers';\n\nimport Feature from '../connector';\n\nexport default new Feature({\n  catalogInfo: { upload: true },\n  route: <Route exact path=\"/upload\" component={Upload} />,\n  navItem: (\n    <MenuItem key=\"/upload\">\n      <NavLink to=\"/upload\" className=\"nav-link\" activeClassName=\"active\">\n        Upload\n      </NavLink>\n    </MenuItem>\n  ),\n  reducer: { upload: reducers },\n  createFetchOptions: constructUploadOptions\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/upload/index.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, RenderField, Button, Alert } from '../../common/components/web';\nimport { required, email } from '../../../../common/validation';\n\nconst ForgotPasswordForm = ({ handleSubmit, submitting, onSubmit, error, sent }) => {\n  return (\n    <Form name=\"forgotPassword\" onSubmit={handleSubmit(onSubmit)}>\n      {sent && <Alert color=\"success\">Reset password instructions have been emailed to you.</Alert>}\n      <Field name=\"email\" component={RenderField} type=\"email\" label=\"Email\" validate={[required, email]} />\n      <div className=\"text-center\">\n        {error && <Alert color=\"error\">{error}</Alert>}\n        <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n          Send Reset Instructions\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nForgotPasswordForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool,\n  error: PropTypes.string,\n  sent: PropTypes.bool\n};\n\nexport default reduxForm({\n  form: 'forgotPassword'\n})(ForgotPasswordForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/ForgotPasswordForm.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { SubmissionError } from 'redux-form';\nimport { LayoutCenter } from '../../common/components';\nimport { PageLayout } from '../../common/components/web';\n\nimport ForgotPasswordForm from '../components/ForgotPasswordForm';\nimport settings from '../../../../../settings';\n\nexport default class ForgotPasswordView extends React.Component {\n  static propTypes = {\n    forgotPassword: PropTypes.func.isRequired,\n    onFormSubmitted: PropTypes.func.isRequired\n  };\n\n  state = {\n    sent: false\n  };\n\n  onSubmit = ({ forgotPassword, onFormSubmitted }) => async values => {\n    const result = await forgotPassword(values);\n\n    if (result.errors) {\n      let submitError = {\n        _error: 'Reset password failed!'\n      };\n      result.errors.map(error => (submitError[error.field] = error.message));\n      throw new SubmissionError(submitError);\n    }\n\n    this.setState({ sent: result });\n    onFormSubmitted();\n  };\n\n  render() {\n    const { forgotPassword, onFormSubmitted } = this.props;\n\n    const renderMetaData = () => (\n      <Helmet\n        title={`${settings.app.name} - Forgot Password`}\n        meta={[\n          {\n            name: 'description',\n            content: `${settings.app.name} - Forgot password page`\n          }\n        ]}\n      />\n    );\n\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <LayoutCenter>\n          <h1 className=\"text-center\">Password Reset</h1>\n          <ForgotPasswordForm onSubmit={this.onSubmit({ forgotPassword, onFormSubmitted })} sent={this.state.sent} />\n        </LayoutCenter>\n      </PageLayout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/ForgotPasswordView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport url from 'url';\nimport { NavLink, Link } from 'react-router-dom';\nimport { Form, RenderField, Alert, Button } from '../../common/components/web';\nimport { required, email, minLength } from '../../../../common/validation';\n\nimport settings from '../../../../../settings';\n\nconst { protocol, hostname, port } = url.parse(__BACKEND_URL__);\nlet serverPort = process.env.PORT || port;\nif (__DEV__) {\n  serverPort = '3000';\n}\n\nconst facebookLogin = () => {\n  window.location = `${protocol}//${hostname}:${serverPort}/auth/facebook`;\n};\n\nconst googleLogin = () => {\n  window.location = `${protocol}//${hostname}:${serverPort}/auth/google`;\n};\n\nconst LoginForm = ({ handleSubmit, submitting, onSubmit, error }) => {\n  return (\n    <Form name=\"login\" onSubmit={handleSubmit(onSubmit)}>\n      <Field name=\"email\" component={RenderField} type=\"email\" label=\"Email\" validate={[required, email]} />\n      <Field\n        name=\"password\"\n        component={RenderField}\n        type=\"password\"\n        label=\"Password\"\n        validate={[required, minLength(5)]}\n      />\n      <div className=\"text-center\">{error && <Alert color=\"error\">{error}</Alert>}</div>\n      <div className=\"text-center\">\n        <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n          Login\n        </Button>\n        {settings.user.auth.facebook.enabled && (\n          <Button color=\"primary\" type=\"button\" onClick={facebookLogin} style={{ margin: 10 }}>\n            Login with Facebook\n          </Button>\n        )}\n        {settings.user.auth.google.enabled && (\n          <Button color=\"primary\" type=\"button\" onClick={googleLogin} style={{ margin: 10 }}>\n            Login with Google\n          </Button>\n        )}\n      </div>\n      <Link className=\"text-center\" to=\"/forgot-password\">\n        Forgot your password?\n      </Link>\n      <hr />\n      <div style={{ marginBottom: 16 }}>\n        <span style={{ lineHeight: '58px' }}>Not registered yet?</span>\n        <NavLink className=\"btn btn-primary\" to=\"/register\" activeClassName=\"active\" style={{ margin: 10 }}>\n          Sign Up\n        </NavLink>\n      </div>\n    </Form>\n  );\n};\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default reduxForm({\n  form: 'login'\n})(LoginForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/LoginForm.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { SubmissionError } from 'redux-form';\nimport { LayoutCenter } from '../../common/components';\nimport { PageLayout, Card, CardGroup, CardTitle, CardText } from '../../common/components/web';\n\nimport LoginForm from '../components/LoginForm';\nimport settings from '../../../../../settings';\n\nexport default class LoginView extends React.PureComponent {\n  static propTypes = {\n    error: PropTypes.string,\n    login: PropTypes.func.isRequired\n  };\n\n  onSubmit = login => async values => {\n    const result = await login(values);\n\n    if (result.errors) {\n      let submitError = {\n        _error: 'Login failed!'\n      };\n      result.errors.map(error => (submitError[error.field] = error.message));\n      throw new SubmissionError(submitError);\n    }\n  };\n\n  render() {\n    const { login } = this.props;\n\n    const renderMetaData = () => (\n      <Helmet\n        title={`${settings.app.name} - Login`}\n        meta={[\n          {\n            name: 'description',\n            content: `${settings.app.name} - Login page`\n          }\n        ]}\n      />\n    );\n\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <LayoutCenter>\n          <h1 className=\"text-center\">Sign In</h1>\n          <LoginForm onSubmit={this.onSubmit(login)} />\n          <hr />\n          <Card>\n            <CardGroup>\n              <CardTitle>Available logins:</CardTitle>\n              <CardText>admin@example.com:admin</CardText>\n              <CardText>user@example.com:user</CardText>\n              {settings.subscription.enabled && <CardText>subscriber@example.com:subscriber</CardText>}\n            </CardGroup>\n          </Card>\n        </LayoutCenter>\n      </PageLayout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/LoginView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { LayoutCenter } from '../../common/components';\nimport { Card, CardGroup, CardTitle, CardText, PageLayout } from '../../common/components/web';\nimport SubscriptionProfile from '../../subscription/containers/SubscriptionProfile';\n\nimport settings from '../../../../../settings';\n\nconst renderMetaData = () => (\n  <Helmet\n    title={`${settings.app.name} - Profile`}\n    meta={[\n      {\n        name: 'description',\n        content: `${settings.app.name} - Profile page`\n      }\n    ]}\n  />\n);\n\nconst ProfileView = ({ loading, currentUser }) => {\n  if (loading && !currentUser) {\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <div className=\"text-center\">Loading...</div>\n      </PageLayout>\n    );\n  } else if (currentUser) {\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <LayoutCenter>\n          <h1 className=\"text-center\">Profile</h1>\n          <Card>\n            <CardGroup>\n              <CardTitle>User Name:</CardTitle>\n              <CardText>{currentUser.username}</CardText>\n            </CardGroup>\n            <CardGroup>\n              <CardTitle>Email:</CardTitle>\n              <CardText>{currentUser.email}</CardText>\n            </CardGroup>\n            <CardGroup>\n              <CardTitle>Role:</CardTitle>\n              <CardText>{currentUser.role}</CardText>\n            </CardGroup>\n            {currentUser.profile &&\n              currentUser.profile.fullName && (\n                <CardGroup>\n                  <CardTitle>Full Name:</CardTitle>\n                  <CardText>{currentUser.profile.fullName}</CardText>\n                </CardGroup>\n              )}\n            {settings.subscription.enabled && <SubscriptionProfile />}\n          </Card>\n        </LayoutCenter>\n      </PageLayout>\n    );\n  } else {\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <h2>No current user logged in</h2>\n      </PageLayout>\n    );\n  }\n};\n\nProfileView.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  currentUser: PropTypes.object\n};\n\nexport default ProfileView;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/ProfileView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, RenderField, Button, Alert } from '../../common/components/web';\nimport { required, email, minLength } from '../../../../common/validation';\n\nconst validate = values => {\n  const errors = {};\n\n  if (values.password && values.passwordConfirmation && values.password !== values.passwordConfirmation) {\n    errors.passwordConfirmation = 'Passwords do not match';\n  }\n  return errors;\n};\n\nconst RegisterForm = ({ handleSubmit, submitting, onSubmit, error }) => {\n  return (\n    <Form name=\"register\" onSubmit={handleSubmit(onSubmit)}>\n      <Field name=\"username\" component={RenderField} type=\"text\" label=\"Username\" validate={[required, minLength(3)]} />\n      <Field name=\"email\" component={RenderField} type=\"email\" label=\"Email\" validate={[required, email]} />\n      <Field\n        name=\"password\"\n        component={RenderField}\n        type=\"password\"\n        label=\"Password\"\n        validate={[required, minLength(5)]}\n      />\n      <Field\n        name=\"passwordConfirmation\"\n        component={RenderField}\n        type=\"password\"\n        label=\"Password Confirmation\"\n        validate={[required, minLength(5)]}\n      />\n      <div className=\"text-center\">\n        {error && <Alert color=\"error\">{error}</Alert>}\n        <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n          Register\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nRegisterForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default reduxForm({\n  form: 'register',\n  validate\n})(RegisterForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/RegisterForm.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { SubmissionError } from 'redux-form';\nimport { LayoutCenter } from '../../common/components';\nimport { PageLayout } from '../../common/components/web';\n\nimport RegisterForm from '../components/RegisterForm';\nimport settings from '../../../../../settings';\n\nexport default class RegisterView extends React.PureComponent {\n  static propTypes = {\n    register: PropTypes.func.isRequired\n  };\n\n  onSubmit = async values => {\n    const { register } = this.props;\n    const result = await register(values);\n\n    if (result.errors) {\n      let submitError = {\n        _error: 'Registration failed!'\n      };\n      result.errors.map(error => (submitError[error.field] = error.message));\n      throw new SubmissionError(submitError);\n    }\n  };\n\n  renderMetaData = () => (\n    <Helmet\n      title={`${settings.app.name} - Register`}\n      meta={[\n        {\n          name: 'description',\n          content: `${settings.app.name} - Register page`\n        }\n      ]}\n    />\n  );\n\n  render() {\n    return (\n      <PageLayout>\n        {this.renderMetaData()}\n        <LayoutCenter>\n          <h1 className=\"text-center\">Sign Up</h1>\n          <RegisterForm onSubmit={this.onSubmit} />\n        </LayoutCenter>\n      </PageLayout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/RegisterView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, RenderField, Button, Alert } from '../../common/components/web';\nimport { required, minLength } from '../../../../common/validation';\n\nconst validate = values => {\n  const errors = {};\n\n  if (values.password && values.passwordConfirmation && values.password !== values.passwordConfirmation) {\n    errors.passwordConfirmation = 'Passwords do not match';\n  }\n  return errors;\n};\n\nconst ResetPasswordForm = ({ handleSubmit, submitting, onSubmit, error }) => {\n  return (\n    <Form name=\"resetPassword\" onSubmit={handleSubmit(onSubmit)}>\n      <Field\n        name=\"password\"\n        component={RenderField}\n        type=\"password\"\n        label=\"Password\"\n        validate={[required, minLength(5)]}\n      />\n      <Field\n        name=\"passwordConfirmation\"\n        component={RenderField}\n        type=\"password\"\n        label=\"Password Confirmation\"\n        validate={[required, minLength(5)]}\n      />\n      {error && <Alert color=\"error\">{error}</Alert>}\n      <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n        Reset Password\n      </Button>\n    </Form>\n  );\n};\n\nResetPasswordForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default reduxForm({\n  form: 'resetPassword',\n  validate\n})(ResetPasswordForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/ResetPasswordForm.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { SubmissionError } from 'redux-form';\nimport { PageLayout } from '../../common/components/web';\n\nimport ResetPasswordForm from '../components/ResetPasswordForm';\nimport settings from '../../../../../settings';\n\nexport default class ResetPasswordView extends React.Component {\n  static propTypes = {\n    resetPassword: PropTypes.func.isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        token: PropTypes.string.isRequired\n      }).isRequired\n    }).isRequired\n  };\n\n  onSubmit = resetPassword => async values => {\n    const result = await resetPassword({\n      ...values,\n      token: this.props.match.params.token\n    });\n\n    if (result.errors) {\n      let submitError = {\n        _error: 'Reset Password failed!'\n      };\n      result.errors.map(error => (submitError[error.field] = error.message));\n      throw new SubmissionError(submitError);\n    }\n  };\n\n  render() {\n    const { resetPassword } = this.props;\n\n    const renderMetaData = () => (\n      <Helmet\n        title={`${settings.app.name} - Reset Password`}\n        meta={[\n          {\n            name: 'description',\n            content: `${settings.app.name} - Reset password page`\n          }\n        ]}\n      />\n    );\n\n    return (\n      <PageLayout>\n        {renderMetaData()}\n        <h1>Reset password!</h1>\n        <ResetPasswordForm onSubmit={this.onSubmit(resetPassword)} />\n      </PageLayout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/ResetPasswordView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { SubmissionError } from 'redux-form';\nimport { pick } from 'lodash';\nimport { PageLayout } from '../../common/components/web';\n\nimport UserForm from './UserForm';\nimport settings from '../../../../../settings';\n\nexport default class UserEditView extends React.PureComponent {\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    user: PropTypes.object,\n    addUser: PropTypes.func.isRequired,\n    editUser: PropTypes.func.isRequired\n  };\n\n  onSubmit = async values => {\n    const { user, addUser, editUser } = this.props;\n    let result = null;\n\n    let insertValues = pick(values, ['username', 'email', 'role', 'isActive', 'password']);\n\n    insertValues['profile'] = pick(values.profile, ['firstName', 'lastName']);\n\n    if (settings.user.auth.certificate.enabled) {\n      insertValues['auth'] = { certificate: pick(values.auth.certificate, 'serial') };\n    }\n\n    if (user) {\n      result = await editUser({ id: user.id, ...insertValues });\n    } else {\n      result = await addUser(insertValues);\n    }\n\n    if (result.errors) {\n      let submitError = {\n        _error: 'Edit user failed!'\n      };\n      result.errors.map(error => (submitError[error.field] = error.message));\n      throw new SubmissionError(submitError);\n    }\n  };\n\n  renderMetaData = () => (\n    <Helmet\n      title={`${settings.app.name} - Edit User`}\n      meta={[\n        {\n          name: 'description',\n          content: `${settings.app.name} - Edit user example page`\n        }\n      ]}\n    />\n  );\n\n  render() {\n    const { loading, user } = this.props;\n\n    if (loading && !user) {\n      return (\n        <PageLayout>\n          {this.renderMetaData()}\n          <div className=\"text-center\">Loading...</div>\n        </PageLayout>\n      );\n    } else {\n      return (\n        <PageLayout>\n          {this.renderMetaData()}\n          <Link id=\"back-button\" to=\"/users\">\n            Back\n          </Link>\n          <h2>{user ? 'Edit' : 'Create'} User</h2>\n          <UserForm onSubmit={this.onSubmit} initialValues={user} />\n        </PageLayout>\n      );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/UserEditView.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, RenderField, RenderSelect, RenderCheckBox, Option, Button, Alert } from '../../common/components/web';\nimport { required, email, minLength } from '../../../../common/validation';\n\nimport settings from '../../../../../settings';\n\nconst validate = values => {\n  const errors = {};\n\n  if (values.password !== values.passwordConfirmation) {\n    errors.passwordConfirmation = 'Passwords do not match';\n  }\n  return errors;\n};\n\nconst UserForm = ({ handleSubmit, submitting, onSubmit, error }) => {\n  return (\n    <Form name=\"user\" onSubmit={handleSubmit(onSubmit)}>\n      <Field name=\"username\" component={RenderField} type=\"text\" label=\"Username\" validate={[required, minLength(3)]} />\n      <Field name=\"email\" component={RenderField} type=\"email\" label=\"Email\" validate={[required, email]} />\n      <Field name=\"role\" component={RenderSelect} type=\"select\" label=\"Role\">\n        <Option value=\"user\">user</Option>\n        <Option value=\"admin\">admin</Option>\n      </Field>\n      <Field name=\"isActive\" component={RenderCheckBox} type=\"checkbox\" label=\"Is Active\" />\n      <Field name=\"profile.firstName\" component={RenderField} type=\"text\" label=\"First Name\" validate={required} />\n      <Field name=\"profile.lastName\" component={RenderField} type=\"text\" label=\"Last Name\" validate={required} />\n      {settings.user.auth.certificate.enabled && (\n        <Field name=\"auth.certificate.serial\" component={RenderField} type=\"text\" label=\"Serial\" validate={required} />\n      )}\n      <Field\n        name=\"password\"\n        component={RenderField}\n        type=\"password\"\n        label=\"Password\"\n        validate={[required, minLength(5)]}\n      />\n      <Field\n        name=\"passwordConfirmation\"\n        component={RenderField}\n        type=\"password\"\n        label=\"Password Confirmation\"\n        validate={[required, minLength(5)]}\n      />\n      {error && <Alert color=\"error\">{error}</Alert>}\n      <Button color=\"primary\" type=\"submit\" disabled={submitting}>\n        Save\n      </Button>\n    </Form>\n  );\n};\n\nUserForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  onSubmit: PropTypes.func,\n  submitting: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default reduxForm({\n  form: 'user',\n  validate\n})(UserForm);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/UserForm.web.jsx","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { PageLayout, Button } from '../../common/components/web';\n\nimport UsersFilter from '../containers/UsersFilter';\nimport UsersList from '../containers/UsersList';\nimport settings from '../../../../../settings';\n\nconst Users = () => {\n  const renderMetaData = () => (\n    <Helmet\n      title={`${settings.app.name} - Users`}\n      meta={[\n        {\n          name: 'description',\n          content: `${settings.app.name} - Users page`\n        }\n      ]}\n    />\n  );\n\n  return (\n    <PageLayout>\n      {renderMetaData()}\n      <h2>Users</h2>\n      <Link to=\"/users/0\">\n        <Button color=\"primary\">Add</Button>\n      </Link>\n      <hr />\n      <UsersFilter />\n      <hr />\n      <UsersList />\n    </PageLayout>\n  );\n};\n\nexport default Users;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/Users.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DebounceInput } from 'react-debounce-input';\nimport { Form, FormItem, Select, Option, Label, Input } from '../../common/components/web';\n\nexport default class UsersFilterView extends React.PureComponent {\n  static propTypes = {\n    searchText: PropTypes.string,\n    role: PropTypes.string,\n    isActive: PropTypes.bool,\n    onSearchTextChange: PropTypes.func.isRequired,\n    onRoleChange: PropTypes.func.isRequired,\n    onIsActiveChange: PropTypes.func.isRequired\n  };\n\n  handleSearch = e => {\n    const { onSearchTextChange } = this.props;\n    onSearchTextChange(e.target.value);\n  };\n\n  handleRole = e => {\n    const { onRoleChange } = this.props;\n    onRoleChange(e.target.value);\n  };\n\n  handleIsActive = () => {\n    const { onIsActiveChange, isActive } = this.props;\n    onIsActiveChange(!isActive);\n  };\n\n  render() {\n    const { role, isActive } = this.props;\n    return (\n      <Form layout=\"inline\">\n        <FormItem label=\"Filter\">\n          <DebounceInput\n            minLength={2}\n            debounceTimeout={300}\n            placeholder=\"Search ...\"\n            element={Input}\n            onChange={this.handleSearch}\n          />\n        </FormItem>\n        &nbsp;\n        <FormItem label=\"Role\">\n          <Select name=\"role\" defaultValue={role} onChange={this.handleRole}>\n            <Option key={1} value=\"\">\n              Select ...\n            </Option>\n            <Option key={2} value=\"user\">\n              user\n            </Option>\n            <Option key={3} value=\"admin\">\n              admin\n            </Option>\n          </Select>\n        </FormItem>\n        &nbsp;\n        <FormItem>\n          <Label>\n            <Input type=\"checkbox\" defaultChecked={isActive} onChange={this.handleIsActive} /> Is Active\n          </Label>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/UsersFilterView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Table, Button } from '../../common/components/web';\n\nexport default class UsersView extends React.PureComponent {\n  static propTypes = {\n    loading: PropTypes.bool.isRequired,\n    users: PropTypes.array,\n    orderBy: PropTypes.object,\n    onOrderBy: PropTypes.func.isRequired,\n    deleteUser: PropTypes.func.isRequired\n  };\n\n  state = {\n    errors: []\n  };\n\n  hendleDeleteUser = async id => {\n    const { deleteUser } = this.props;\n    const result = await deleteUser(id);\n    if (result && result.errors) {\n      this.setState({ errors: result.errors });\n    } else {\n      this.setState({ errors: [] });\n    }\n  };\n\n  renderOrderByArrow = name => {\n    const { orderBy } = this.props;\n\n    if (orderBy && orderBy.column === name) {\n      if (orderBy.order === 'desc') {\n        return <span className=\"badge badge-primary\">&#8595;</span>;\n      } else {\n        return <span className=\"badge badge-primary\">&#8593;</span>;\n      }\n    } else {\n      return <span className=\"badge badge-secondary\">&#8645;</span>;\n    }\n  };\n\n  orderBy = (e, name) => {\n    const { onOrderBy, orderBy } = this.props;\n\n    e.preventDefault();\n\n    let order = 'asc';\n    if (orderBy && orderBy.column === name) {\n      if (orderBy.order === 'asc') {\n        order = 'desc';\n      } else if (orderBy.order === 'desc') {\n        return onOrderBy({});\n      }\n    }\n\n    return onOrderBy({ column: name, order });\n  };\n\n  render() {\n    const { loading, users } = this.props;\n    const { errors } = this.state;\n\n    const columns = [\n      {\n        title: (\n          <a onClick={e => this.orderBy(e, 'username')} href=\"#\">\n            Username {this.renderOrderByArrow('username')}\n          </a>\n        ),\n        dataIndex: 'username',\n        key: 'username',\n        render: (text, record) => (\n          <Link className=\"user-link\" to={`/users/${record.id}`}>\n            {text}\n          </Link>\n        )\n      },\n      {\n        title: (\n          <a onClick={e => this.orderBy(e, 'email')} href=\"#\">\n            Email {this.renderOrderByArrow('email')}\n          </a>\n        ),\n        dataIndex: 'email',\n        key: 'email'\n      },\n      {\n        title: (\n          <a onClick={e => this.orderBy(e, 'role')} href=\"#\">\n            Role {this.renderOrderByArrow('role')}\n          </a>\n        ),\n        dataIndex: 'role',\n        key: 'role'\n      },\n      {\n        title: (\n          <a onClick={e => this.orderBy(e, 'isActive')} href=\"#\">\n            Is Active {this.renderOrderByArrow('isActive')}\n          </a>\n        ),\n        dataIndex: 'isActive',\n        key: 'isActive',\n        render: text => text.toString()\n      },\n      {\n        title: 'Actions',\n        key: 'actions',\n        render: (text, record) => (\n          <Button color=\"primary\" size=\"sm\" onClick={() => this.hendleDeleteUser(record.id)}>\n            Delete\n          </Button>\n        )\n      }\n    ];\n\n    if (loading && !users) {\n      return <div className=\"text-center\">Loading...</div>;\n    } else {\n      return (\n        <div>\n          {errors &&\n            errors.map(error => (\n              <div className=\"alert alert-danger\" role=\"alert\" key={error.field}>\n                {error.message}\n              </div>\n            ))}\n          <Table dataSource={users} columns={columns} />\n        </div>\n      );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/components/UsersListView.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withApollo, graphql, compose } from 'react-apollo';\nimport { Route, Redirect, NavLink, withRouter } from 'react-router-dom';\nimport { withCookies, Cookies } from 'react-cookie';\nimport decode from 'jwt-decode';\n\nimport log from '../../../../common/log';\nimport CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\nimport LOGOUT from '../graphql/Logout.graphql';\n\nconst checkAuth = (cookies, scope) => {\n  let token = null;\n  let refreshToken = null;\n\n  if (cookies && cookies.get('r-token')) {\n    token = cookies.get('r-token');\n    refreshToken = cookies.get('r-refresh-token');\n  }\n  if (__CLIENT__ && window.localStorage.getItem('token')) {\n    token = window.localStorage.getItem('token');\n    refreshToken = window.localStorage.getItem('refreshToken');\n  }\n\n  if (!token || !refreshToken) {\n    return false;\n  }\n\n  try {\n    const { exp } = decode(refreshToken);\n\n    if (exp < new Date().getTime() / 1000) {\n      return false;\n    }\n\n    if (scope === 'admin') {\n      const { user: { role } } = decode(token);\n      if (scope !== role) {\n        return false;\n      }\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\nconst profileName = cookies => {\n  let token = null;\n\n  if (cookies && cookies.get('x-token')) {\n    token = cookies.get('x-token');\n  }\n\n  if (__CLIENT__ && window.localStorage.getItem('token')) {\n    token = window.localStorage.getItem('token');\n  }\n\n  if (!token) {\n    return '';\n  }\n\n  try {\n    const { user: { username, fullName } } = decode(token);\n    return fullName ? fullName : username;\n  } catch (e) {\n    return '';\n  }\n};\n\nconst AuthNav = withCookies(({ children, cookies, scope }) => {\n  return checkAuth(cookies, scope) ? children : null;\n});\n\nAuthNav.propTypes = {\n  children: PropTypes.object,\n  cookies: PropTypes.instanceOf(Cookies)\n};\n\nconst AuthLogin = ({ children, cookies, logout }) => {\n  return checkAuth(cookies) ? (\n    <a href=\"#\" onClick={() => logout()} className=\"nav-link\">\n      Logout\n    </a>\n  ) : (\n    children\n  );\n};\n\nAuthLogin.propTypes = {\n  children: PropTypes.object,\n  cookies: PropTypes.instanceOf(Cookies),\n  logout: PropTypes.func.isRequired\n};\n\nconst AuthLoginWithApollo = withCookies(\n  withRouter(\n    withApollo(\n      compose(\n        graphql(CURRENT_USER_QUERY),\n        graphql(LOGOUT, {\n          // eslint-disable-next-line\n          props: ({ ownProps: { client, history, navigation }, mutate }) => ({\n            logout: async () => {\n              try {\n                const { data: { logout } } = await mutate();\n\n                if (logout.errors) {\n                  return { errors: logout.errors };\n                }\n\n                // comment out until https://github.com/apollographql/apollo-client/issues/1186 is fixed\n                //await client.resetStore();\n\n                window.localStorage.setItem('token', null);\n                window.localStorage.setItem('refreshToken', null);\n\n                if (history) {\n                  return history.push('/');\n                }\n                if (navigation) {\n                  return navigation.goBack();\n                }\n              } catch (e) {\n                log.error(e.stack);\n              }\n            }\n          })\n        })\n      )(AuthLogin)\n    )\n  )\n);\n\nconst AuthProfile = withCookies(({ cookies }) => {\n  return checkAuth(cookies) ? (\n    <NavLink to=\"/profile\" className=\"nav-link\" activeClassName=\"active\">\n      {profileName(cookies)}\n    </NavLink>\n  ) : null;\n});\n\nAuthProfile.propTypes = {\n  cookies: PropTypes.instanceOf(Cookies)\n};\n\nconst AuthLoggedIn = withCookies(({ cookies, label, to, ...rest }) => {\n  return checkAuth(cookies) ? (\n    <NavLink to={to} {...rest}>\n      {label}\n    </NavLink>\n  ) : null;\n});\n\nAuthLoggedIn.propTypes = {\n  component: PropTypes.func,\n  cookies: PropTypes.instanceOf(Cookies),\n  label: PropTypes.string,\n  to: PropTypes.string\n};\n\nconst AuthRoute = withCookies(({ component: Component, cookies, scope, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        checkAuth(cookies, scope) ? <Component {...props} /> : <Redirect to={{ pathname: '/login' }} />\n      }\n    />\n  );\n});\n\nAuthRoute.propTypes = {\n  component: PropTypes.func,\n  cookies: PropTypes.instanceOf(Cookies)\n};\n\nconst AuthLoggedInRoute = withCookies(({ component: Component, cookies, redirect, scope, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        checkAuth(cookies, scope) ? <Redirect to={{ pathname: redirect }} /> : <Component {...props} />\n      }\n    />\n  );\n});\n\nAuthLoggedInRoute.propTypes = {\n  component: PropTypes.func,\n  cookies: PropTypes.instanceOf(Cookies),\n  redirect: PropTypes.string,\n  scope: PropTypes.string\n};\n\nexport { AuthNav };\nexport { AuthLoggedIn };\nexport { AuthLoginWithApollo as AuthLogin };\nexport { AuthProfile };\nexport { AuthRoute };\nexport { AuthLoggedInRoute };\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/Auth.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { graphql, compose } from 'react-apollo';\nimport { reset } from 'redux-form';\n\nimport ForgotPasswordView from '../components/ForgotPasswordView';\n\nimport FORGOT_PASSWORD from '../graphql/ForgotPassword.graphql';\n\nclass ForgotPassword extends React.Component {\n  render() {\n    return <ForgotPasswordView {...this.props} />;\n  }\n}\n\nconst ForgotPasswordWithApollo = compose(\n  graphql(FORGOT_PASSWORD, {\n    props: ({ mutate }) => ({\n      forgotPassword: async ({ email }) => {\n        try {\n          const { data: { forgotPassword } } = await mutate({\n            variables: { input: { email } }\n          });\n\n          if (forgotPassword.errors) {\n            return { errors: forgotPassword.errors };\n          }\n\n          return forgotPassword;\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  }),\n  connect(null, dispatch => ({\n    onFormSubmitted() {\n      dispatch(reset('forgotPassword'));\n    }\n  }))\n)(ForgotPassword);\n\nexport default ForgotPasswordWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/ForgotPassword.jsx","/* eslint-disable no-undef */\n// React\nimport React from 'react';\n\n// Apollo\nimport { graphql, compose } from 'react-apollo';\n\n// Components\nimport LoginView from '../components/LoginView';\n\nimport LOGIN from '../graphql/Login.graphql';\n\nclass Login extends React.Component {\n  render() {\n    return <LoginView {...this.props} />;\n  }\n}\n\nconst LoginWithApollo = compose(\n  graphql(LOGIN, {\n    props: ({ ownProps: { history, navigation }, mutate }) => ({\n      login: async ({ email, password }) => {\n        try {\n          const { data: { login } } = await mutate({\n            variables: { input: { email, password } }\n          });\n\n          if (login.errors) {\n            return { errors: login.errors };\n          }\n\n          const { token, refreshToken } = login.tokens;\n          localStorage.setItem('token', token);\n          localStorage.setItem('refreshToken', refreshToken);\n\n          if (history) {\n            return history.push('/profile');\n          }\n          if (navigation) {\n            return navigation.goBack();\n          }\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })\n)(Login);\n\nexport default LoginWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/Login.jsx","// React\nimport React from 'react';\n\n// Apollo\nimport { graphql, compose } from 'react-apollo';\n\n// Components\nimport ProfileView from '../components/ProfileView';\n\nimport CURRENT_USER_QUERY from '../graphql/CurrentUserQuery.graphql';\n\nclass Profile extends React.Component {\n  render() {\n    return <ProfileView {...this.props} />;\n  }\n}\n\nexport default compose(\n  graphql(CURRENT_USER_QUERY, {\n    options: { fetchPolicy: 'network-only' },\n    props({ data: { loading, error, currentUser } }) {\n      if (error) throw new Error(error);\n      return { loading, currentUser };\n    }\n  })\n)(Profile);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/Profile.jsx","// React\nimport React from 'react';\n\n// Apollo\nimport { graphql, compose } from 'react-apollo';\n\n// Components\nimport RegisterView from '../components/RegisterView';\n\nimport REGISTER from '../graphql/Register.graphql';\n\nimport settings from '../../../../../settings';\n\nclass Register extends React.Component {\n  render() {\n    return <RegisterView {...this.props} />;\n  }\n}\n\nconst RegisterWithApollo = compose(\n  graphql(REGISTER, {\n    props: ({ ownProps: { history, navigation }, mutate }) => ({\n      register: async ({ username, email, password }) => {\n        try {\n          const { data: { register } } = await mutate({\n            variables: { input: { username, email, password } }\n          });\n\n          if (register.errors) {\n            return { errors: register.errors };\n          }\n          if (history) {\n            if (settings.subscription.enabled) {\n              return history.push('/subscription');\n            }\n            return history.push('/profile');\n          }\n          if (navigation) {\n            return navigation.goBack();\n          }\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })\n)(Register);\n\nexport default RegisterWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/Register.jsx","import React from 'react';\nimport { graphql, compose } from 'react-apollo';\n\nimport ResetPasswordView from '../components/ResetPasswordView';\n\nimport RESET_PASSWORD from '../graphql/ResetPassword.graphql';\n\nclass ResetPassword extends React.Component {\n  render() {\n    return <ResetPasswordView {...this.props} />;\n  }\n}\n\nconst ResetPasswordWithApollo = compose(\n  graphql(RESET_PASSWORD, {\n    props: ({ ownProps: { history }, mutate }) => ({\n      resetPassword: async ({ password, passwordConfirmation, token }) => {\n        try {\n          const { data: { resetPassword } } = await mutate({\n            variables: { input: { password, passwordConfirmation, token } }\n          });\n\n          if (resetPassword.errors) {\n            return { errors: resetPassword.errors };\n          }\n\n          history.push('/login');\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })\n)(ResetPassword);\n\nexport default ResetPasswordWithApollo;\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/ResetPassword.jsx","import React from 'react';\nimport { graphql, compose } from 'react-apollo';\n\nimport UserEditView from '../components/UserEditView';\n\nimport USER_QUERY from '../graphql/UserQuery.graphql';\nimport ADD_USER from '../graphql/AddUser.graphql';\nimport EDIT_USER from '../graphql/EditUser.graphql';\n\nclass UserEdit extends React.Component {\n  render() {\n    return <UserEditView {...this.props} />;\n  }\n}\n\nexport default compose(\n  graphql(USER_QUERY, {\n    options: props => {\n      let id = 0;\n      if (props.match) {\n        id = props.match.params.id;\n      } else if (props.navigation) {\n        id = props.navigation.state.params.id;\n      }\n\n      return {\n        variables: { id }\n      };\n    },\n    props({ data: { loading, user } }) {\n      return { loading, user };\n    }\n  }),\n  graphql(ADD_USER, {\n    props: ({ ownProps: { history, navigation }, mutate }) => ({\n      addUser: async input => {\n        try {\n          const { data: { addUser } } = await mutate({\n            variables: { input }\n          });\n\n          if (addUser.errors) {\n            return { errors: addUser.errors };\n          }\n\n          if (history) {\n            return history.push('/users');\n          }\n          if (navigation) {\n            return navigation.goBack();\n          }\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  }),\n  graphql(EDIT_USER, {\n    props: ({ ownProps: { history, navigation }, mutate }) => ({\n      editUser: async input => {\n        try {\n          const { data: { editUser } } = await mutate({\n            variables: { input }\n          });\n\n          if (editUser.errors) {\n            return { errors: editUser.errors };\n          }\n\n          if (history) {\n            return history.push('/users');\n          }\n          if (navigation) {\n            return navigation.goBack();\n          }\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })\n)(UserEdit);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/UserEdit.jsx","// React\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// Components\nimport UsersFilterView from '../components/UsersFilterView';\n\nclass UsersFilter extends React.Component {\n  render() {\n    return <UsersFilterView {...this.props} />;\n  }\n}\n\nexport default connect(\n  state => ({\n    searchText: state.user.searchText,\n    role: state.user.role,\n    isActive: state.user.isActive\n  }),\n  dispatch => ({\n    onSearchTextChange(searchText) {\n      dispatch({\n        type: 'USER_FILTER_SEARCH_TEXT',\n        value: searchText\n      });\n    },\n    onRoleChange(role) {\n      dispatch({\n        type: 'USER_FILTER_ROLE',\n        value: role\n      });\n    },\n    onIsActiveChange(isActive) {\n      dispatch({\n        type: 'USER_FILTER_IS_ACTIVE',\n        value: isActive\n      });\n    }\n  })\n)(UsersFilter);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/UsersFilter.jsx","// React\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// Apollo\nimport { graphql, compose } from 'react-apollo';\n\n// Components\nimport UsersListView from '../components/UsersListView';\n\nimport USERS_QUERY from '../graphql/UsersQuery.graphql';\nimport DELETE_USER from '../graphql/DeleteUser.graphql';\n\nclass UsersList extends React.Component {\n  render() {\n    return <UsersListView {...this.props} />;\n  }\n}\n\nconst UsersListWithApollo = compose(\n  graphql(USERS_QUERY, {\n    options: ({ orderBy, searchText, role, isActive }) => {\n      return {\n        fetchPolicy: 'cache-and-network',\n        variables: {\n          orderBy: orderBy,\n          filter: { searchText, role, isActive }\n        }\n      };\n    },\n    props({ data: { loading, users, refetch, error } }) {\n      return { loading, users, refetch, errors: error ? error.graphQLErrors : null };\n    }\n  }),\n  graphql(DELETE_USER, {\n    props: ({ ownProps: { refetch }, mutate }) => ({\n      deleteUser: async id => {\n        try {\n          const { data: { deleteUser } } = await mutate({\n            variables: { id }\n          });\n\n          // refeatch USERS_QUERY\n          refetch();\n\n          if (deleteUser.errors) {\n            return { errors: deleteUser.errors };\n          }\n        } catch (e) {\n          console.log(e.graphQLErrors);\n        }\n      }\n    })\n  })\n)(UsersList);\n\nexport default connect(\n  state => ({\n    searchText: state.user.searchText,\n    role: state.user.role,\n    isActive: state.user.isActive,\n    orderBy: state.user.orderBy\n  }),\n  dispatch => ({\n    onOrderBy(orderBy) {\n      dispatch({\n        type: 'USER_ORDER_BY',\n        value: orderBy\n      });\n    }\n  })\n)(UsersListWithApollo);\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/containers/UsersList.jsx","import React from 'react';\nimport { CookiesProvider } from 'react-cookie';\nimport { NavLink } from 'react-router-dom';\nimport { MenuItem } from '../../modules/common/components/web';\nimport Profile from './containers/Profile';\nimport Users from './components/Users';\nimport UserEdit from './containers/UserEdit';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\nimport ForgotPassword from './containers/ForgotPassword';\nimport ResetPassword from './containers/ResetPassword';\nimport reducers from './reducers';\n\nimport { AuthRoute, AuthLoggedInRoute, AuthNav, AuthLogin, AuthProfile } from './containers/Auth';\n\nimport Feature from '../connector';\n\nfunction tokenMiddleware(req, options, next) {\n  options.headers['x-token'] = window.localStorage.getItem('token');\n  options.headers['x-refresh-token'] = window.localStorage.getItem('refreshToken');\n  next();\n}\n\nfunction tokenAfterware(res, options, next) {\n  const token = options.headers['x-token'];\n  const refreshToken = options.headers['x-refresh-token'];\n  if (token) {\n    window.localStorage.setItem('token', token);\n  }\n  if (refreshToken) {\n    window.localStorage.setItem('refreshToken', refreshToken);\n  }\n  next();\n}\n\nfunction connectionParam() {\n  return {\n    token: window.localStorage.getItem('token'),\n    refreshToken: window.localStorage.getItem('refreshToken')\n  };\n}\n\nexport default new Feature({\n  route: [\n    <AuthRoute exact path=\"/profile\" scope=\"user\" component={Profile} />,\n    <AuthRoute exact path=\"/users\" scope=\"admin\" component={Users} />,\n    <AuthRoute exact path=\"/users/:id\" component={UserEdit} />,\n    <AuthLoggedInRoute exact path=\"/register\" redirect=\"/profile\" component={Register} />,\n    <AuthLoggedInRoute exact path=\"/login\" redirect=\"/profile\" component={Login} />,\n    <AuthLoggedInRoute exact path=\"/forgot-password\" redirect=\"/profile\" component={ForgotPassword} />,\n    <AuthLoggedInRoute exact path=\"/reset-password/:token\" redirect=\"/profile\" component={ResetPassword} />\n  ],\n  navItem: [\n    <MenuItem key=\"/users\">\n      <AuthNav scope=\"admin\">\n        <NavLink to=\"/users\" className=\"nav-link\" activeClassName=\"active\">\n          Users\n        </NavLink>\n      </AuthNav>\n    </MenuItem>\n  ],\n  navItemRight: [\n    <MenuItem key=\"/profile\">\n      <AuthProfile />\n    </MenuItem>,\n    <MenuItem key=\"/login\">\n      <AuthLogin>\n        <NavLink to=\"/login\" className=\"nav-link\" activeClassName=\"active\">\n          Sign In\n        </NavLink>\n      </AuthLogin>\n    </MenuItem>\n  ],\n  reducer: { user: reducers },\n  middleware: tokenMiddleware,\n  afterware: tokenAfterware,\n  connectionParam: connectionParam,\n  // eslint-disable-next-line react/display-name\n  rootComponentFactory: req => <CookiesProvider cookies={req ? req.universalCookies : undefined} />\n});\n\n\n\n// WEBPACK FOOTER //\n// src/client/modules/user/index.web.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport serialize from 'serialize-javascript';\nimport modules from '../../client/modules';\nimport { styles } from '../../client/modules/common/components/web';\n\nconst Html = ({ content, state, assetMap, css, helmet, token, refreshToken }) => {\n  const htmlAttrs = helmet.htmlAttributes.toComponent(); // react-helmet html document tags\n  const bodyAttrs = helmet.bodyAttributes.toComponent(); // react-helmet body document tags\n\n  return (\n    <html lang=\"en\" {...htmlAttrs}>\n      <head>\n        {helmet.title.toComponent()}\n        {helmet.meta.toComponent()}\n        {helmet.link.toComponent()}\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`/${assetMap['apple-touch-icon.png']}`} />\n        <link rel=\"icon\" type=\"image/png\" href={`/${assetMap['favicon-32x32.png']}`} sizes=\"32x32\" />\n        <link rel=\"icon\" type=\"image/png\" href={`/${assetMap['favicon-16x16.png']}`} sizes=\"16x16\" />\n        <link rel=\"manifest\" href={`/${assetMap['manifest.json']}`} />\n        <link rel=\"mask-icon\" href={`/${assetMap['safari-pinned-tab.svg']}`} color=\"#5bbad5\" />\n        <link rel=\"shortcut icon\" href={`/${assetMap['favicon.ico']}`} />\n        <meta name=\"msapplication-config\" content={`/${assetMap['browserconfig.xml']}`} />\n        <meta name=\"theme-color\" content=\"#ffffff\" />\n        {!__DEV__ && <link rel=\"stylesheet\" type=\"text/css\" href={`/${assetMap['index.css']}`} />}\n        {!!__DEV__ && (\n          <style\n            dangerouslySetInnerHTML={{\n              __html: styles._getCss() + modules.stylesInserts.map(style => style._getCss()).join('')\n            }}\n          />\n        )}\n        {!!css && css}\n        {modules.scriptsInserts.map((script, i) => {\n          if (script) {\n            return <script key={i} src={script} />;\n          }\n        })}\n      </head>\n      <body {...bodyAttrs}>\n        <div id=\"content\" dangerouslySetInnerHTML={{ __html: content || '' }} />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.__APOLLO_STATE__=${serialize(state, {\n              isJSON: true\n            })};window.localStorage.setItem('token','${token}');window.localStorage.setItem('refreshToken','${refreshToken}');`\n          }}\n          charSet=\"UTF-8\"\n        />\n        {assetMap['vendor.js'] && <script src={`/${assetMap['vendor.js']}`} charSet=\"utf-8\" />}\n        <script src={`/${assetMap['index.js']}`} charSet=\"utf-8\" />\n      </body>\n    </html>\n  );\n};\n\nHtml.propTypes = {\n  content: PropTypes.string,\n  state: PropTypes.object.isRequired,\n  assetMap: PropTypes.object.isRequired,\n  css: PropTypes.array,\n  helmet: PropTypes.object,\n  token: PropTypes.string,\n  refreshToken: PropTypes.string\n};\n\nexport default Html;\n\n\n\n// WEBPACK FOOTER //\n// src/server/middleware/html.jsx","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { createApolloFetch } from 'apollo-fetch';\nimport { ApolloLink } from 'apollo-link';\nimport { BatchHttpLink } from 'apollo-link-batch-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider, getDataFromTree } from 'react-apollo';\nimport { Provider } from 'react-redux';\nimport { StaticRouter } from 'react-router';\nimport { ServerStyleSheet } from 'styled-components';\nimport { LoggingLink } from 'apollo-logger';\n// import { addPersistedQueries } from 'persistgraphql';\nimport fs from 'fs';\nimport path from 'path';\nimport Helmet from 'react-helmet';\nimport url from 'url';\nimport { AppRegistry } from 'react-native';\n\nimport createApolloClient from '../../common/createApolloClient';\nimport createReduxStore from '../../common/createReduxStore';\nimport Html from './html';\nimport Routes from '../../client/app/Routes';\nimport modules from '../modules';\nimport { options as spinConfig } from '../../../.spinrc.json';\nimport settings from '../../../settings';\n\nlet assetMap;\n\nconst { protocol, hostname, port, pathname } = url.parse(__BACKEND_URL__);\nconst apiUrl = `${protocol}//${hostname}:${process.env.PORT || port}${pathname}`;\n\nconst renderServerSide = async (req, res) => {\n  // if (__PERSIST_GQL__) {\n  //   networkInterface = addPersistedQueries(networkInterface, queryMap);\n  // }\n  //\n\n  const fetch = createApolloFetch({ uri: apiUrl, constructOptions: modules.constructFetchOptions });\n  fetch.batchUse(({ options }, next) => {\n    options.credentials = 'include';\n    options.headers = req.headers;\n\n    next();\n  });\n  const cache = new InMemoryCache();\n\n  let link = new BatchHttpLink({ fetch });\n\n  const client = createApolloClient({\n    link: ApolloLink.from((settings.app.logging.apolloLogging ? [new LoggingLink()] : []).concat([link])),\n    cache\n  });\n\n  let initialState = {};\n  const store = createReduxStore(initialState, client);\n\n  const context = {};\n  const clientModules = require('../../client/modules').default;\n  const App = () =>\n    clientModules.getWrappedRoot(\n      <Provider store={store}>\n        <ApolloProvider client={client}>\n          <StaticRouter location={req.url} context={context}>\n            {Routes}\n          </StaticRouter>\n        </ApolloProvider>\n      </Provider>,\n      req\n    );\n\n  AppRegistry.registerComponent('App', () => App);\n  const { element, stylesheets } = AppRegistry.getApplication('App', {});\n\n  await getDataFromTree(element);\n\n  if (context.pageNotFound === true) {\n    res.status(404);\n  } else {\n    res.status(200);\n  }\n\n  const sheet = new ServerStyleSheet();\n  const html = ReactDOMServer.renderToString(sheet.collectStyles(element));\n  const css = sheet\n    .getStyleElement()\n    .concat(stylesheets)\n    .map((el, idx) => React.cloneElement(el, { key: idx }));\n  const helmet = Helmet.renderStatic(); // Avoid memory leak while tracking mounted instances\n\n  if (context.url) {\n    res.writeHead(301, { Location: context.url });\n    res.end();\n  } else {\n    if (__DEV__ || !assetMap) {\n      assetMap = JSON.parse(fs.readFileSync(path.join(spinConfig.frontendBuildDir, 'web', 'assets.json')));\n    }\n\n    const apolloState = Object.assign({}, cache.extract());\n\n    const token = req.universalCookies.get('x-token') ? req.universalCookies.get('x-token') : null;\n    const refreshToken = req.universalCookies.get('x-refresh-token')\n      ? req.universalCookies.get('x-refresh-token')\n      : null;\n\n    const page = (\n      <Html\n        content={html}\n        state={apolloState}\n        assetMap={assetMap}\n        css={css}\n        helmet={helmet}\n        token={token}\n        refreshToken={refreshToken}\n      />\n    );\n    res.send(`<!doctype html>\\n${ReactDOMServer.renderToStaticMarkup(page)}`);\n    res.end();\n  }\n};\n\nexport default queryMap => async (req, res, next) => {\n  try {\n    if (req.url.indexOf('.') < 0 && __SSR__) {\n      return await renderServerSide(req, res, queryMap);\n    } else {\n      next();\n    }\n  } catch (e) {\n    next(e);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/server/middleware/website.jsx","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 0"],"mappings":";;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAPA;AACA;AAgBA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AALA;AADA;AAUA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAnBA;AACA;AAuBA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AARA;AADA;AADA;AACA;AAuBA;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAQA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AAgBA;AADA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;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CA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAHA;AADA;AACA;AAWA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAXA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AAXA;AAaA;;;AAEA;AACA;AACA;;;;AA7CA;AAEA;AACA;AAFA;AACA;AACA;AA6CA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAdA;AADA;AAuBA;AAzBA;AAAA;AADA;AACA;AA8BA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AAKA;AAPA;AAAA;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;;;;AAfA;AACA;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAXA;AADA;AAoBA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAPA;AADA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAaA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;AAaA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AATA;AADA;AAJA;AACA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAOA;;;;AArFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAHA;AADA;AACA;AAWA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AATA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAQA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAFA;AAHA;AADA;;;;;AAYA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AAJA;AAWA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AADA;AAJA;AAgBA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AADA;AAKA;AAbA;AAgBA;AACA;;;;AA1FA;AAEA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AADA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AADA;AAUA;AACA;AACA;;;AAOA;AAAA;AACA;AADA;AACA;AADA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AA/CA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAsBA;AACA;AACA;;;;AA3DA;AAEA;AACA;AACA;AAHA;AACA;AACA;AA2DA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AAnBA;AAqBA;AACA;AACA;AACA;AAjCA;AAoCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AATA;AAeA;AAjBA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AACA;AACA;;;AASA;AAAA;AACA;AADA;AACA;AADA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AA3CA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAsBA;AACA;AACA;;;;AAzDA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AACA;AAyDA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AAVA;AADA;AADA;AAAA;AADA;AAwBA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAFA;AADA;AADA;AAAA;AADA;AAiBA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AATA;AADA;AADA;AAAA;AADA;AACA;AAuBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AATA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AAAA;AACA;AADA;AACA;AADA;AA2BA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAjCA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAWA;AACA;AACA;;;;AA7CA;AAEA;AACA;AACA;AAHA;AACA;AACA;AA6CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAhBA;AAmBA;AAAA;AA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AA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AACA;AAUA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAZA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AACA;AAHA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAYA;AAAA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AACA;AAyBA;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AATA;AACA;AAYA;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AA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AFA;AACA;AAIA;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AARA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAYA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAHA;AADA;;;;;AAYA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAFA;AAQA;;;;AAxCA;AAEA;AADA;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;A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CA;AADA;AAAA;AADA;AAzBA;AAgCA;;;;AA5DA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AASA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AASA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AARA;AAeA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAPA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAPA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AARA;AAWA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AADA;AAKA;AAPA;AAUA;AACA;;;;AA/HA;AAEA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAoBA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAFA;AACA;AAiCA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAWA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AAmBA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AAUA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAoBA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AACA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAkBA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AACA;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AASA;AAVA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAWA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AACA;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAfA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAlBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAZA;AAeA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAYA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAAA;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAQA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AApCA;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AANA;AAQA;AACA;AAXA;AA9BA;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAFA;AACA;AAWA;AAAA;AAAA;AAvCA;AAAA;AAAA;AACA;AADA;AACA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AAvFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAwFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;;;;;;;ACxHA;;;;A","sourceRoot":""}